# Autogenerated by SmartBody
# -------------------- cameras
scene.setScale(0.01)
# -------------------- scene
obj = scene
if obj.getAttribute("bmlIndex") != None :
	obj.setIntAttribute("bmlIndex",1)
else:
	attr = obj.createIntAttribute("bmlIndex", 1, True, "", 560, False, False, False, "Unique identifier when executing BML commands.")
	attr.setDefaultValue(1)
if obj.getAttribute("colladaTrimFrames") != None :
	obj.setIntAttribute("colladaTrimFrames",0)
else:
	attr = obj.createIntAttribute("colladaTrimFrames", 0, True, "", 40, False, False, False, "Number of frames to be trimmed in the front when loading a collada motion.")
	attr.setDefaultValue(0)
if obj.getAttribute("defaultCharacter") != None :
	obj.setStringAttribute("defaultCharacter","")
else:
	attr = obj.createStringAttribute("defaultCharacter",  "", True, "", 550, False, False, False, "Default character when processing BML.")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("defaultRecipient") != None :
	obj.setStringAttribute("defaultRecipient","ALL")
else:
	attr = obj.createStringAttribute("defaultRecipient",  "ALL", True, "", 550, False, False, False, "Default recipient when processing BML.")
	attr.setDefaultValue("ALL")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("delaySpeechIfNeeded") != None :
	obj.setBoolAttribute("delaySpeechIfNeeded",True)
else:
	attr = obj.createBoolAttribute("delaySpeechIfNeeded", True, True, "", 60, False, False, False, "Delays any speech until other behaviors specified in the same BML need to execute beforehand. This can occur when a gesture is synchronized to a word early in the utterance, and the gesture motion needs to be played for awhile before the synch point.")
	attr.setDefaultValue(True)
if obj.getAttribute("enableConsoleLogging") != None :
	obj.setBoolAttribute("enableConsoleLogging",True)
else:
	attr = obj.createBoolAttribute("enableConsoleLogging", True, True, "", 70, False, False, False, "Use SmartBody's internal audio player.")
	attr.setDefaultValue(True)
if obj.getAttribute("enableExportProcessedBML") != None :
	obj.setBoolAttribute("enableExportProcessedBML",False)
else:
	attr = obj.createBoolAttribute("enableExportProcessedBML", False, True, "", 80, False, False, False, "Enable exporting of bml after realization.")
	attr.setDefaultValue(False)
if obj.getAttribute("enableExportProcessedBMLLOG") != None :
	obj.setBoolAttribute("enableExportProcessedBMLLOG",False)
else:
	attr = obj.createBoolAttribute("enableExportProcessedBMLLOG", False, True, "", 81, False, False, False, "Enable log for exporting of bml after realization.")
	attr.setDefaultValue(False)
if obj.getAttribute("enableFaceShader") != None :
	obj.setBoolAttribute("enableFaceShader",False)
else:
	attr = obj.createBoolAttribute("enableFaceShader", False, True, "", 70, False, False, False, "Enable the face shader for higher quality rendering.")
	attr.setDefaultValue(False)
if obj.getAttribute("internalAudio") != None :
	obj.setBoolAttribute("internalAudio",False)
else:
	attr = obj.createBoolAttribute("internalAudio", False, True, "", 10, False, False, False, "Use SmartBody's internal audio player.")
	attr.setDefaultValue(False)
if obj.getAttribute("processedBMLPath") != None :
	obj.setStringAttribute("processedBMLPath","./processedXML.xml")
else:
	attr = obj.createStringAttribute("processedBMLPath",  "./processedXML.xml", True, "", 90, False, False, False, "path of exported bml file after realization.")
	attr.setDefaultValue("./processedXML.xml")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("queuedCommandsIndex") != None :
	obj.setIntAttribute("queuedCommandsIndex",1)
else:
	attr = obj.createIntAttribute("queuedCommandsIndex", 1, True, "", 560, False, False, False, "Unique identifier when executing sequence commands.")
	attr.setDefaultValue(1)
if obj.getAttribute("scale") != None :
	obj.setDoubleAttribute("scale",0.01)
else:
	attr = obj.createDoubleAttribute("scale", 0.01, True, "", 30, False, False, False, "The scale of scene (1 = meters, .01 = centimeters, etc).")
	attr.setDefaultValue(0.01)
if obj.getAttribute("shadowMapCount") != None :
	obj.setIntAttribute("shadowMapCount",1)
else:
	attr = obj.createIntAttribute("shadowMapCount", 1, True, "RenderingParameters", 110, False, False, False, "Num of the shadow maps")
	attr.setDefaultValue(1)
if obj.getAttribute("shadowMapSize") != None :
	obj.setIntAttribute("shadowMapSize",1024)
else:
	attr = obj.createIntAttribute("shadowMapSize", 1024, True, "RenderingParameters", 100, False, False, False, "Size of the shadow map")
	attr.setDefaultValue(1024)
if obj.getAttribute("speechRelaySoundCacheDir") != None :
	obj.setStringAttribute("speechRelaySoundCacheDir","../../../..")
else:
	attr = obj.createStringAttribute("speechRelaySoundCacheDir",  "../../../..", True, "", 20, False, False, False, "Directory where sound files from speech relays will be placed. ")
	attr.setDefaultValue("../../../..")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("useFastCOLLADAParsing") != None :
	obj.setBoolAttribute("useFastCOLLADAParsing",True)
else:
	attr = obj.createBoolAttribute("useFastCOLLADAParsing", True, True, "", 50, False, False, False, "Use faster parsing when reading COLLADA from a file.")
	attr.setDefaultValue(True)
if obj.getAttribute("useFastSpeechParsing") != None :
	obj.setBoolAttribute("useFastSpeechParsing",False)
else:
	attr = obj.createBoolAttribute("useFastSpeechParsing", False, True, "", 50, False, False, False, "Use faster parsing when reading speech from a file.")
	attr.setDefaultValue(False)
if obj.getAttribute("useXMLCache") != None :
	obj.setBoolAttribute("useXMLCache",False)
else:
	attr = obj.createBoolAttribute("useXMLCache", False, True, "", 500, False, False, False, "Cache the XML used when processing audio files.")
	attr.setDefaultValue(False)
if obj.getAttribute("useXMLCacheAuto") != None :
	obj.setBoolAttribute("useXMLCacheAuto",False)
else:
	attr = obj.createBoolAttribute("useXMLCacheAuto", False, True, "", 510, False, False, False, "Automatically add the XML to the cache when processing audio files after playing for the first time.")
	attr.setDefaultValue(False)
if obj.getAttribute("warnDeprecatedCommands") != None :
	obj.setBoolAttribute("warnDeprecatedCommands",False)
else:
	attr = obj.createBoolAttribute("warnDeprecatedCommands", False, True, "", 600, False, False, False, "Shows a warning when a deprecated command is being used.")
	attr.setDefaultValue(False)
# -------------------- media and asset paths
print "Save Assets"
scene.setMediaPath("../data")
scene.loadAssetsFromPath("Assets")
# -------------------- load assets
scene.loadAssets()
# -------------------- joint maps
print "Save Joint Maps"
# -------------------- applying joint maps
# -------------------- cameras
print "Save Cameras"
obj = scene.getCamera("cameraDefault")
if obj == None:
	obj = scene.createCamera("cameraDefault")
obj.setEye(0, 166, 185)
obj.setCenter(0, 92, 0)
obj.setUpVector(SrVec(0, 1, 0))
obj.setScale(1)
obj.setFov(1.0472)
obj.setFarPlane(10000)
obj.setNearPlane(10)
obj.setAspectRatio(1.25315)
if obj.getAttribute("aspectRatio") != None :
	obj.setDoubleAttribute("aspectRatio",1.25315)
else:
	attr = obj.createDoubleAttribute("aspectRatio", 1.25315, True, "Camera", 270, False, False, False, "")
	attr.setDefaultValue(1)
if obj.getAttribute("centerX") != None :
	obj.setDoubleAttribute("centerX",0)
else:
	attr = obj.createDoubleAttribute("centerX", 0, True, "Camera", 200, False, False, False, "")
	attr.setDefaultValue(1)
if obj.getAttribute("centerY") != None :
	obj.setDoubleAttribute("centerY",92)
else:
	attr = obj.createDoubleAttribute("centerY", 92, True, "Camera", 210, False, False, False, "")
	attr.setDefaultValue(1)
if obj.getAttribute("centerZ") != None :
	obj.setDoubleAttribute("centerZ",0)
else:
	attr = obj.createDoubleAttribute("centerZ", 0, True, "Camera", 220, False, False, False, "")
	attr.setDefaultValue(1)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","null")
else:
	attr = obj.createStringAttribute("collisionShape",  "null", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("far") != None :
	obj.setDoubleAttribute("far",10000)
else:
	attr = obj.createDoubleAttribute("far", 10000, True, "Camera", 260, False, False, False, "")
	attr.setDefaultValue(1)
if obj.getAttribute("fov") != None :
	obj.setDoubleAttribute("fov",1.0472)
else:
	attr = obj.createDoubleAttribute("fov", 1.0472, True, "Camera", 240, False, False, False, "")
	attr.setDefaultValue(1)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 405, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 400, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslate",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("near") != None :
	obj.setDoubleAttribute("near",10)
else:
	attr = obj.createDoubleAttribute("near", 10, True, "Camera", 250, False, False, False, "")
	attr.setDefaultValue(1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0)
else:
	attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",166)
else:
	attr = obj.createDoubleAttribute("posY", 166, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",185)
else:
	attr = obj.createDoubleAttribute("posZ", 185, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-21.8014)
else:
	attr = obj.createDoubleAttribute("rotX", -21.8014, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("scale") != None :
	obj.setDoubleAttribute("scale",1)
else:
	attr = obj.createDoubleAttribute("scale", 1, True, "Camera", 280, False, False, False, "")
	attr.setDefaultValue(1)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 415, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
attr = obj.createVec3Attribute("up",  0, 1, 0, True, "Camera", 230, False, False, False, "")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 1)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "")
	attr.setDefaultValue(True)
# -------------------- lights
print "Save Lights"
# -------------------- face definitions
print "Save Face Definitions"
# -------------------- lip syncing
print "Save Lip Syncing"
diphoneMapManager = scene.getDiphoneManager()
# -------------------- blends and transitions
print "Save Blends"
# blend PseudoIdle
# autogenerated by SmartBody

blendManager = scene.getBlendManager()

# align motions first if needed

PseudoIdleState = blendManager.createBlend0D("PseudoIdle")

PseudoIdleState.setBlendSkeleton("")
motions = StringVec()

for i in range(0, len(motions)):
	PseudoIdleState.addMotion(motions[i])


# -------------------- on-line retargeting setup
print "Save Retargets"
retargetManager = scene.getRetargetManager()
# -------------------- gesture maps
print "Save Gesture Maps"
# -------------------- pawns and characters
print "Save Pawns"

# ---- pawn: SBorder
obj = scene.getPawn("SBorder")
if obj == None:
	obj = scene.createPawn("SBorder")
obj.setPosition(SrVec(0, 0, 60))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  160, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  0, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0)
else:
	attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",60)
else:
	attr = obj.createDoubleAttribute("posZ", 60, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",False)
else:
	attr = obj.createBoolAttribute("showStaticMesh", False, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: NBorder
obj = scene.getPawn("NBorder")
if obj == None:
	obj = scene.createPawn("NBorder")
obj.setPosition(SrVec(0, 0, -300))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  160, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  0, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0)
else:
	attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-300)
else:
	attr = obj.createDoubleAttribute("posZ", -300, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: EBorder
obj = scene.getPawn("EBorder")
if obj == None:
	obj = scene.createPawn("EBorder")
obj.setPosition(SrVec(159.058, 0, -89.6313))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 180, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  0, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",True)
else:
	attr = obj.createBoolAttribute("enablePhysics", True, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",159.058)
else:
	attr = obj.createDoubleAttribute("posX", 159.058, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-89.6313)
else:
	attr = obj.createDoubleAttribute("posZ", -89.6313, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: WBorder
obj = scene.getPawn("WBorder")
if obj == None:
	obj = scene.createPawn("WBorder")
obj.setPosition(SrVec(-162.035, 0, -99.7546))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 180, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  0, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-162.035)
else:
	attr = obj.createDoubleAttribute("posX", -162.035, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-99.7546)
else:
	attr = obj.createDoubleAttribute("posZ", -99.7546, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 1column
obj = scene.getPawn("1column")
if obj == None:
	obj = scene.createPawn("1column")
obj.setPosition(SrVec(-128.928, 0, -119.216))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 160, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",True)
else:
	attr = obj.createBoolAttribute("enablePhysics", True, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-128.928)
else:
	attr = obj.createDoubleAttribute("posX", -128.928, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-119.216)
else:
	attr = obj.createDoubleAttribute("posZ", -119.216, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 2column
obj = scene.getPawn("2column")
if obj == None:
	obj = scene.createPawn("2column")
obj.setPosition(SrVec(-105.756, 0, -20.2813))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 80, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",True)
else:
	attr = obj.createBoolAttribute("enablePhysics", True, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-105.756)
else:
	attr = obj.createDoubleAttribute("posX", -105.756, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-20.2813)
else:
	attr = obj.createDoubleAttribute("posZ", -20.2813, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 3column
obj = scene.getPawn("3column")
if obj == None:
	obj = scene.createPawn("3column")
obj.setPosition(SrVec(-106.62, 0, -234.991))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 60, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",True)
else:
	attr = obj.createBoolAttribute("enablePhysics", True, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-106.62)
else:
	attr = obj.createDoubleAttribute("posX", -106.62, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-234.991)
else:
	attr = obj.createDoubleAttribute("posZ", -234.991, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 4column
obj = scene.getPawn("4column")
if obj == None:
	obj = scene.createPawn("4column")
obj.setPosition(SrVec(-82.748, 0, -212.038))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 60, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-82.748)
else:
	attr = obj.createDoubleAttribute("posX", -82.748, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-212.038)
else:
	attr = obj.createDoubleAttribute("posZ", -212.038, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 5column
obj = scene.getPawn("5column")
if obj == None:
	obj = scene.createPawn("5column")
obj.setPosition(SrVec(-82.1784, 0, -51.3376))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 70, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",True)
else:
	attr = obj.createBoolAttribute("enablePhysics", True, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-82.1784)
else:
	attr = obj.createDoubleAttribute("posX", -82.1784, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-51.3376)
else:
	attr = obj.createDoubleAttribute("posZ", -51.3376, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 6column
obj = scene.getPawn("6column")
if obj == None:
	obj = scene.createPawn("6column")
obj.setPosition(SrVec(-55.846, 0, -211.338))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 90, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-55.846)
else:
	attr = obj.createDoubleAttribute("posX", -55.846, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-211.338)
else:
	attr = obj.createDoubleAttribute("posZ", -211.338, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 7column
obj = scene.getPawn("7column")
if obj == None:
	obj = scene.createPawn("7column")
obj.setPosition(SrVec(-57.2984, 0, 8.90751))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 50, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-57.2984)
else:
	attr = obj.createDoubleAttribute("posX", -57.2984, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",8.90751)
else:
	attr = obj.createDoubleAttribute("posZ", 8.90751, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 8 column
obj = scene.getPawn("8 column")
if obj == None:
	obj = scene.createPawn("8 column")
obj.setPosition(SrVec(-56.5445, 0, -80.6429))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 15, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-56.5445)
else:
	attr = obj.createDoubleAttribute("posX", -56.5445, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-80.6429)
else:
	attr = obj.createDoubleAttribute("posZ", -80.6429, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 9column
obj = scene.getPawn("9column")
if obj == None:
	obj = scene.createPawn("9column")
obj.setPosition(SrVec(-39.9581, 0, -196.215))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 80, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-39.9581)
else:
	attr = obj.createDoubleAttribute("posX", -39.9581, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-196.215)
else:
	attr = obj.createDoubleAttribute("posZ", -196.215, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 10column
obj = scene.getPawn("10column")
if obj == None:
	obj = scene.createPawn("10column")
obj.setPosition(SrVec(-41.466, 0, -16.8588))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 50, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-41.466)
else:
	attr = obj.createDoubleAttribute("posX", -41.466, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-16.8588)
else:
	attr = obj.createDoubleAttribute("posZ", -16.8588, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 11column
obj = scene.getPawn("11column")
if obj == None:
	obj = scene.createPawn("11column")
obj.setPosition(SrVec(-19.6021, 0, -105.263))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 90, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-19.6021)
else:
	attr = obj.createDoubleAttribute("posX", -19.6021, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-105.263)
else:
	attr = obj.createDoubleAttribute("posZ", -105.263, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 12column
obj = scene.getPawn("12column")
if obj == None:
	obj = scene.createPawn("12column")
obj.setPosition(SrVec(-21.1099, 0, 29.4845))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 30, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-21.1099)
else:
	attr = obj.createDoubleAttribute("posX", -21.1099, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",29.4845)
else:
	attr = obj.createDoubleAttribute("posZ", 29.4845, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 13column
obj = scene.getPawn("13column")
if obj == None:
	obj = scene.createPawn("13column")
obj.setPosition(SrVec(-20.6168, 0, -266.912))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 30, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-20.6168)
else:
	attr = obj.createDoubleAttribute("posX", -20.6168, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-266.912)
else:
	attr = obj.createDoubleAttribute("posZ", -266.912, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 14column
obj = scene.getPawn("14column")
if obj == None:
	obj = scene.createPawn("14column")
obj.setPosition(SrVec(-1.03856, 0, -140.415))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 120, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-1.03856)
else:
	attr = obj.createDoubleAttribute("posX", -1.03856, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-140.415)
else:
	attr = obj.createDoubleAttribute("posZ", -140.415, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 15 column
obj = scene.getPawn("15 column")
if obj == None:
	obj = scene.createPawn("15 column")
obj.setPosition(SrVec(19.6023, 0, 9.1616))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 50, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",19.6023)
else:
	attr = obj.createDoubleAttribute("posX", 19.6023, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",9.1616)
else:
	attr = obj.createDoubleAttribute("posZ", 9.1616, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 16 column
obj = scene.getPawn("16 column")
if obj == None:
	obj = scene.createPawn("16 column")
obj.setPosition(SrVec(20.5651, 0, -136.897))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 60, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",20.5651)
else:
	attr = obj.createDoubleAttribute("posX", 20.5651, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-136.897)
else:
	attr = obj.createDoubleAttribute("posZ", -136.897, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 17column
obj = scene.getPawn("17column")
if obj == None:
	obj = scene.createPawn("17column")
obj.setPosition(SrVec(20.1544, 0, -266.182))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 30, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",20.1544)
else:
	attr = obj.createDoubleAttribute("posX", 20.1544, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-266.182)
else:
	attr = obj.createDoubleAttribute("posZ", -266.182, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 18column
obj = scene.getPawn("18column")
if obj == None:
	obj = scene.createPawn("18column")
obj.setPosition(SrVec(41.4661, 0, -29.7651))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 90, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",41.4661)
else:
	attr = obj.createDoubleAttribute("posX", 41.4661, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-29.7651)
else:
	attr = obj.createDoubleAttribute("posZ", -29.7651, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 19column
obj = scene.getPawn("19column")
if obj == None:
	obj = scene.createPawn("19column")
obj.setPosition(SrVec(42.9739, 0, -225.729))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 50, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",True)
else:
	attr = obj.createBoolAttribute("enablePhysics", True, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",42.9739)
else:
	attr = obj.createDoubleAttribute("posX", 42.9739, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-225.729)
else:
	attr = obj.createDoubleAttribute("posZ", -225.729, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 20column
obj = scene.getPawn("20column")
if obj == None:
	obj = scene.createPawn("20column")
obj.setPosition(SrVec(66.3452, 0, -186.563))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 60, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",66.3452)
else:
	attr = obj.createDoubleAttribute("posX", 66.3452, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-186.563)
else:
	attr = obj.createDoubleAttribute("posZ", -186.563, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 21column
obj = scene.getPawn("21column")
if obj == None:
	obj = scene.createPawn("21column")
obj.setPosition(SrVec(65.6187, 0, -20.6039))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 55, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",65.6187)
else:
	attr = obj.createDoubleAttribute("posX", 65.6187, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-20.6039)
else:
	attr = obj.createDoubleAttribute("posZ", -20.6039, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 22column
obj = scene.getPawn("22column")
if obj == None:
	obj = scene.createPawn("22column")
obj.setPosition(SrVec(89.7159, 0, 20.0145))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 40, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",89.7159)
else:
	attr = obj.createDoubleAttribute("posX", 89.7159, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",20.0145)
else:
	attr = obj.createDoubleAttribute("posZ", 20.0145, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 23column
obj = scene.getPawn("23column")
if obj == None:
	obj = scene.createPawn("23column")
obj.setPosition(SrVec(91.4755, 0, -83.7329))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 40, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",91.4755)
else:
	attr = obj.createDoubleAttribute("posX", 91.4755, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-83.7329)
else:
	attr = obj.createDoubleAttribute("posZ", -83.7329, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 24column
obj = scene.getPawn("24column")
if obj == None:
	obj = scene.createPawn("24column")
obj.setPosition(SrVec(91.9789, 0, -229.828))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 60, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",91.9789)
else:
	attr = obj.createDoubleAttribute("posX", 91.9789, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-229.828)
else:
	attr = obj.createDoubleAttribute("posZ", -229.828, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 25column
obj = scene.getPawn("25column")
if obj == None:
	obj = scene.createPawn("25column")
obj.setPosition(SrVec(119.121, 0, -155.225))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 120, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",119.121)
else:
	attr = obj.createDoubleAttribute("posX", 119.121, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-155.225)
else:
	attr = obj.createDoubleAttribute("posZ", -155.225, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 26column
obj = scene.getPawn("26column")
if obj == None:
	obj = scene.createPawn("26column")
obj.setPosition(SrVec(120.253, 0, 20.4231))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 40, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",120.253)
else:
	attr = obj.createDoubleAttribute("posX", 120.253, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",20.4231)
else:
	attr = obj.createDoubleAttribute("posZ", 20.4231, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 27column
obj = scene.getPawn("27column")
if obj == None:
	obj = scene.createPawn("27column")
obj.setPosition(SrVec(141.192, 0, -168.012))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 40, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",141.192)
else:
	attr = obj.createDoubleAttribute("posX", 141.192, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-168.012)
else:
	attr = obj.createDoubleAttribute("posZ", -168.012, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 28column
obj = scene.getPawn("28column")
if obj == None:
	obj = scene.createPawn("28column")
obj.setPosition(SrVec(140.985, 0, -26.1528))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 50, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",140.985)
else:
	attr = obj.createDoubleAttribute("posX", 140.985, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-26.1528)
else:
	attr = obj.createDoubleAttribute("posZ", -26.1528, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row1
obj = scene.getPawn("row1")
if obj == None:
	obj = scene.createPawn("row1")
obj.setPosition(SrVec(-118.303, 0, 13.6756))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-118.303)
else:
	attr = obj.createDoubleAttribute("posX", -118.303, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",13.6756)
else:
	attr = obj.createDoubleAttribute("posZ", 13.6756, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row2
obj = scene.getPawn("row2")
if obj == None:
	obj = scene.createPawn("row2")
obj.setPosition(SrVec(-118.28, 0, -155.417))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-118.28)
else:
	attr = obj.createDoubleAttribute("posX", -118.28, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-155.417)
else:
	attr = obj.createDoubleAttribute("posZ", -155.417, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row3
obj = scene.getPawn("row3")
if obj == None:
	obj = scene.createPawn("row3")
obj.setPosition(SrVec(-95.1164, 0, -210.963))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-95.1164)
else:
	attr = obj.createDoubleAttribute("posX", -95.1164, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-210.963)
else:
	attr = obj.createDoubleAttribute("posZ", -210.963, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row4
obj = scene.getPawn("row4")
if obj == None:
	obj = scene.createPawn("row4")
obj.setPosition(SrVec(-82.9285, 0, -120.953))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  28, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",True)
else:
	attr = obj.createBoolAttribute("enablePhysics", True, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-82.9285)
else:
	attr = obj.createDoubleAttribute("posX", -82.9285, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-120.953)
else:
	attr = obj.createDoubleAttribute("posZ", -120.953, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row5
obj = scene.getPawn("row5")
if obj == None:
	obj = scene.createPawn("row5")
obj.setPosition(SrVec(-31.0222, 0, 32.0492))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-31.0222)
else:
	attr = obj.createDoubleAttribute("posX", -31.0222, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",32.0492)
else:
	attr = obj.createDoubleAttribute("posZ", 32.0492, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row6
obj = scene.getPawn("row6")
if obj == None:
	obj = scene.createPawn("row6")
obj.setPosition(SrVec(-49.2817, 0, -67.2072))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-49.2817)
else:
	attr = obj.createDoubleAttribute("posX", -49.2817, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-67.2072)
else:
	attr = obj.createDoubleAttribute("posZ", -67.2072, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row7
obj = scene.getPawn("row7")
if obj == None:
	obj = scene.createPawn("row7")
obj.setPosition(SrVec(-10.555, 0, -148.954))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-10.555)
else:
	attr = obj.createDoubleAttribute("posX", -10.555, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-148.954)
else:
	attr = obj.createDoubleAttribute("posZ", -148.954, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row8
obj = scene.getPawn("row8")
if obj == None:
	obj = scene.createPawn("row8")
obj.setPosition(SrVec(54.3188, 0, -203.822))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",54.3188)
else:
	attr = obj.createDoubleAttribute("posX", 54.3188, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-203.822)
else:
	attr = obj.createDoubleAttribute("posZ", -203.822, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row9
obj = scene.getPawn("row9")
if obj == None:
	obj = scene.createPawn("row9")
obj.setPosition(SrVec(78.8654, 0, -170.289))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  12, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",78.8654)
else:
	attr = obj.createDoubleAttribute("posX", 78.8654, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-170.289)
else:
	attr = obj.createDoubleAttribute("posZ", -170.289, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row10
obj = scene.getPawn("row10")
if obj == None:
	obj = scene.createPawn("row10")
obj.setPosition(SrVec(-11.3089, 0, 16.9618))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-11.3089)
else:
	attr = obj.createDoubleAttribute("posX", -11.3089, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",16.9618)
else:
	attr = obj.createDoubleAttribute("posZ", 16.9618, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row11
obj = scene.getPawn("row11")
if obj == None:
	obj = scene.createPawn("row11")
obj.setPosition(SrVec(9.17855, 0, -38.8366))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",9.17855)
else:
	attr = obj.createDoubleAttribute("posX", 9.17855, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-38.8366)
else:
	attr = obj.createDoubleAttribute("posZ", -38.8366, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row12
obj = scene.getPawn("row12")
if obj == None:
	obj = scene.createPawn("row12")
obj.setPosition(SrVec(30.9111, 0, -140.013))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",30.9111)
else:
	attr = obj.createDoubleAttribute("posX", 30.9111, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-140.013)
else:
	attr = obj.createDoubleAttribute("posZ", -140.013, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row13
obj = scene.getPawn("row13")
if obj == None:
	obj = scene.createPawn("row13")
obj.setPosition(SrVec(105.965, 0, -87.5175))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  12, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",105.965)
else:
	attr = obj.createDoubleAttribute("posX", 105.965, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-87.5175)
else:
	attr = obj.createDoubleAttribute("posZ", -87.5175, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row14
obj = scene.getPawn("row14")
if obj == None:
	obj = scene.createPawn("row14")
obj.setPosition(SrVec(78.691, 0, -98.7125))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  12, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",78.691)
else:
	attr = obj.createDoubleAttribute("posX", 78.691, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-98.7125)
else:
	attr = obj.createDoubleAttribute("posZ", -98.7125, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row15
obj = scene.getPawn("row15")
if obj == None:
	obj = scene.createPawn("row15")
obj.setPosition(SrVec(79.3304, 0, -44.0547))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  12, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",True)
else:
	attr = obj.createBoolAttribute("enablePhysics", True, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",79.3304)
else:
	attr = obj.createDoubleAttribute("posX", 79.3304, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-44.0547)
else:
	attr = obj.createDoubleAttribute("posZ", -44.0547, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row16
obj = scene.getPawn("row16")
if obj == None:
	obj = scene.createPawn("row16")
obj.setPosition(SrVec(106.446, 0, -228.84))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  12, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",True)
else:
	attr = obj.createBoolAttribute("enablePhysics", True, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",106.446)
else:
	attr = obj.createDoubleAttribute("posX", 106.446, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-228.84)
else:
	attr = obj.createDoubleAttribute("posZ", -228.84, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row17
obj = scene.getPawn("row17")
if obj == None:
	obj = scene.createPawn("row17")
obj.setPosition(SrVec(129.675, 0, -49.0148))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",129.675)
else:
	attr = obj.createDoubleAttribute("posX", 129.675, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-49.0148)
else:
	attr = obj.createDoubleAttribute("posZ", -49.0148, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row18
obj = scene.getPawn("row18")
if obj == None:
	obj = scene.createPawn("row18")
obj.setPosition(SrVec(150.031, 0, -109.39))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",150.031)
else:
	attr = obj.createDoubleAttribute("posX", 150.031, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-109.39)
else:
	attr = obj.createDoubleAttribute("posZ", -109.39, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: row19
obj = scene.getPawn("row19")
if obj == None:
	obj = scene.createPawn("row19")
obj.setPosition(SrVec(150.219, 0, -176.734))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  10, 20, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",150.219)
else:
	attr = obj.createDoubleAttribute("posX", 150.219, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-176.734)
else:
	attr = obj.createDoubleAttribute("posZ", -176.734, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)

# ---- pawn: 29column
obj = scene.getPawn("29column")
if obj == None:
	obj = scene.createPawn("29column")
obj.setPosition(SrVec(141.256, 0, -271.961))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 20, 30, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("meshScale") != None :
	obj.setDoubleAttribute("meshScale",1)
else:
	attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",141.256)
else:
	attr = obj.createDoubleAttribute("posX", 141.256, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-271.961)
else:
	attr = obj.createDoubleAttribute("posZ", -271.961, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
print "Save Characters"
# -------------------- lip syncing
obj = scene.getServiceManager().getService("BoneBus")
if obj.getAttribute("enable") != None :
	obj.setBoolAttribute("enable",False)
else:
	attr = obj.createBoolAttribute("enable", False, True, "basic", 5, False, False, False, "Enables or disables the service.")
	attr.setDefaultValue(False)
if obj.getAttribute("host") != None :
	obj.setStringAttribute("host","")
else:
	attr = obj.createStringAttribute("host",  "", True, "", 10, False, False, False, "Host where the BoneBus data will be sent. If not set, will use 'localhost'")
	attr.setDefaultValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
obj = scene.getServiceManager().getService("VHMsg")
if obj.getAttribute("enable") != None :
	obj.setBoolAttribute("enable",False)
else:
	attr = obj.createBoolAttribute("enable", False, True, "basic", 5, False, False, False, "Enables or disables the service.")
	attr.setDefaultValue(False)
obj = scene.getServiceManager().getService("collision")
if obj.getAttribute("collisionResolutionType") != None :
	obj.setStringAttribute("collisionResolutionType","none")
else:
	attr = obj.createStringAttribute("collisionResolutionType",  "none", True, "Physics", 350, False, False, False, "Set the collision resolution method")
	attr.setDefaultValue("none")
	validValues = StringVec()
	validValues.append("none")
	validValues.append("default")
	attr.setValidValues(validValues)
if obj.getAttribute("enable") != None :
	obj.setBoolAttribute("enable",False)
else:
	attr = obj.createBoolAttribute("enable", False, True, "basic", 5, False, False, False, "Enables or disables the service.")
	attr.setDefaultValue(False)
if obj.getAttribute("jointBVLenRadRatio") != None :
	obj.setDoubleAttribute("jointBVLenRadRatio",4)
else:
	attr = obj.createDoubleAttribute("jointBVLenRadRatio", 4, True, "Basic", 60, False, False, False, "Joint BV capsule length-radius ratio.")
	attr.setDefaultValue(4)
if obj.getAttribute("maxNumIterations") != None :
	obj.setIntAttribute("maxNumIterations",5)
else:
	attr = obj.createIntAttribute("maxNumIterations", 5, True, "Basic", 60, False, False, False, "Max number collision response iterations.")
	attr.setDefaultValue(5)
if obj.getAttribute("singleChrCapsuleMode") != None :
	obj.setBoolAttribute("singleChrCapsuleMode",False)
else:
	attr = obj.createBoolAttribute("singleChrCapsuleMode", False, True, "basic", 5, False, False, False, "Create single collision capsule for each character.")
	attr.setDefaultValue(False)
obj = scene.getServiceManager().getService("physics")
if obj.getAttribute("enable") != None :
	obj.setBoolAttribute("enable",False)
else:
	attr = obj.createBoolAttribute("enable", False, True, "basic", 5, False, False, False, "Enables or disables the service.")
	attr.setDefaultValue(False)
obj = scene.getServiceManager().getService("steering")
if obj.getAttribute("addBoundaryWalls") != None :
	obj.setBoolAttribute("addBoundaryWalls",True)
else:
	attr = obj.createBoolAttribute("addBoundaryWalls", True, True, "Basic", 60, False, False, False, "Adds boundaries around the perimeter of the grid to prevent agents from leaving grid area.")
	attr.setDefaultValue(True)
if obj.getAttribute("aimodule") != None :
	obj.setStringAttribute("aimodule","pprAI")
else:
	attr = obj.createStringAttribute("aimodule",  "libpprAI", True, "Basic", 60, False, False, False, "Agent module library")
	attr.setDefaultValue("libpprAI")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("enable") != None :
	obj.setBoolAttribute("enable",True)
else:
	attr = obj.createBoolAttribute("enable", True, True, "basic", 5, False, False, False, "Enables or disables the service.")
	attr.setDefaultValue(False)
if obj.getAttribute("engineOptions.moduleSearchPath") != None :
	obj.setStringAttribute("engineOptions.moduleSearchPath","../../../../core/smartbody/sbm/bin/")
else:
	attr = obj.createStringAttribute("engineOptions.moduleSearchPath",  "../../../../core/smartbody/sbm/bin/", True, "Basic", 60, False, False, False, "Path to find test cases")
	attr.setDefaultValue("../../../../core/smartbody/sbm/bin/")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("engineOptions.testCaseSearchPath") != None :
	obj.setStringAttribute("engineOptions.testCaseSearchPath","../../../../core/smartbody/steersuite-1.3/testcases/")
else:
	attr = obj.createStringAttribute("engineOptions.testCaseSearchPath",  "../../../../core/smartbody/steersuite-1.3/testcases/", True, "Basic", 60, False, False, False, "Path to find agent shared libraries")
	attr.setDefaultValue("../../../../core/smartbody/steersuite-1.3/testcases/")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("gridDatabaseOptions.gridSizeX") != None :
	obj.setDoubleAttribute("gridDatabaseOptions.gridSizeX",100)
else:
	attr = obj.createDoubleAttribute("gridDatabaseOptions.gridSizeX", 100, True, "Basic", 60, False, False, False, "Size of grid in x dimension.")
	attr.setDefaultValue(35)
if obj.getAttribute("gridDatabaseOptions.gridSizeZ") != None :
	obj.setDoubleAttribute("gridDatabaseOptions.gridSizeZ",100)
else:
	attr = obj.createDoubleAttribute("gridDatabaseOptions.gridSizeZ", 100, True, "Basic", 60, False, False, False, "Size of grid in z dimension.")
	attr.setDefaultValue(35)
if obj.getAttribute("gridDatabaseOptions.maxItemsPerGridCell") != None :
	obj.setIntAttribute("gridDatabaseOptions.maxItemsPerGridCell",7)
else:
	attr = obj.createIntAttribute("gridDatabaseOptions.maxItemsPerGridCell", 7, True, "Basic", 60, False, False, False, "Max units per grid cell. If agent density is high, make sure increase this value.")
	attr.setDefaultValue(7)
if obj.getAttribute("gridDatabaseOptions.numGridCellsX") != None :
	obj.setIntAttribute("gridDatabaseOptions.numGridCellsX",100)
else:
	attr = obj.createIntAttribute("gridDatabaseOptions.numGridCellsX", 100, True, "Basic", 60, False, False, False, "Number of grid cells in x dimension.")
	attr.setDefaultValue(70)
if obj.getAttribute("gridDatabaseOptions.numGridCellsZ") != None :
	obj.setIntAttribute("gridDatabaseOptions.numGridCellsZ",100)
else:
	attr = obj.createIntAttribute("gridDatabaseOptions.numGridCellsZ", 100, True, "Basic", 60, False, False, False, "Number of grid cells in z dimension.")
	attr.setDefaultValue(70)
if obj.getAttribute("initialConditions.radius") != None :
	obj.setDoubleAttribute("initialConditions.radius",0.4)
else:
	attr = obj.createDoubleAttribute("initialConditions.radius", 0.4, True, "Basic", 60, False, False, False, "Initial radius of agents in meters.")
	attr.setDefaultValue(0.4)
if obj.getAttribute("maxUpdateFrequency") != None :
	obj.setDoubleAttribute("maxUpdateFrequency",60)
else:
	attr = obj.createDoubleAttribute("maxUpdateFrequency", 60, True, "Basic", 60, False, False, False, "Maximum frequency of steering updates.")
	attr.setDefaultValue(60)
if obj.getAttribute("useEnvironmentCollisions") != None :
	obj.setBoolAttribute("useEnvironmentCollisions",True)
else:
	attr = obj.createBoolAttribute("useEnvironmentCollisions", True, True, "Basic", 60, False, False, False, "Determines whether to include the environment (pawns) when determining steering path. If set to false, objects in the environment will be ignored.")
	attr.setDefaultValue(True)
