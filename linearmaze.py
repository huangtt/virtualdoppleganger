# Autogenerated by SmartBody
# -------------------- pawns and characters
print "Save Pawns"

# ---- pawn: obj1
obj = scene.getPawn("obj1")
if obj == None:
	obj = scene.createPawn("obj1")
obj.setPosition(SrVec(-1, 0, 35))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.2, 1.5, 5)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.2, 1.5, 5, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.2, 1.5, 5)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-1)
else:
	attr = obj.createDoubleAttribute("posX", -1, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-1)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",35)
else:
	attr = obj.createDoubleAttribute("posZ", 35, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(35)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj2
obj = scene.getPawn("obj2")
if obj == None:
	obj = scene.createPawn("obj2")
obj.setPosition(SrVec(1, 0, 35))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.2, 1.5, 5)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.2, 1.5, 5, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.2, 1.5, 5)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",1)
else:
	attr = obj.createDoubleAttribute("posX", 1, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(1)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",35)
else:
	attr = obj.createDoubleAttribute("posZ", 35, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(35)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj3
obj = scene.getPawn("obj3")
if obj == None:
	obj = scene.createPawn("obj3")
obj.setPosition(SrVec(0, 0, 26))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",5, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  5, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(5, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0)
else:
	attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",26)
else:
	attr = obj.createDoubleAttribute("posZ", 26, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(26)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj4
obj = scene.getPawn("obj4")
if obj == None:
	obj = scene.createPawn("obj4")
obj.setPosition(SrVec(-3.9999, 0, 30))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",3, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  3, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(3, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-3.9999)
else:
	attr = obj.createDoubleAttribute("posX", -3.9999, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-3.9999)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",30)
else:
	attr = obj.createDoubleAttribute("posZ", 30, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(30)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj5
obj = scene.getPawn("obj5")
if obj == None:
	obj = scene.createPawn("obj5")
obj.setPosition(SrVec(4, 0, 30))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",3, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  3, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(3, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",4)
else:
	attr = obj.createDoubleAttribute("posX", 4, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(4)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",30)
else:
	attr = obj.createDoubleAttribute("posZ", 30, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(30)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj6
obj = scene.getPawn("obj6")
if obj == None:
	obj = scene.createPawn("obj6")
obj.setPosition(SrVec(7, 0, 18))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 12)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 12, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 12)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",7)
else:
	attr = obj.createDoubleAttribute("posX", 7, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(7)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",18)
else:
	attr = obj.createDoubleAttribute("posZ", 18, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(18)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj7
obj = scene.getPawn("obj7")
if obj == None:
	obj = scene.createPawn("obj7")
obj.setPosition(SrVec(-7, 0, 18))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 12)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 12, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 12)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-7)
else:
	attr = obj.createDoubleAttribute("posX", -7, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-7)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",18)
else:
	attr = obj.createDoubleAttribute("posZ", 18, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(18)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj8
obj = scene.getPawn("obj8")
if obj == None:
	obj = scene.createPawn("obj8")
obj.setPosition(SrVec(0, 0, 21))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",4, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  4, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(4, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0)
else:
	attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",21)
else:
	attr = obj.createDoubleAttribute("posZ", 21, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(21)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj9
obj = scene.getPawn("obj9")
if obj == None:
	obj = scene.createPawn("obj9")
obj.setPosition(SrVec(-4, 0, 23))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",3, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  3, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(3, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-4)
else:
	attr = obj.createDoubleAttribute("posX", -4, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-4)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",23)
else:
	attr = obj.createDoubleAttribute("posZ", 23, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(23)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj10
obj = scene.getPawn("obj10")
if obj == None:
	obj = scene.createPawn("obj10")
obj.setPosition(SrVec(4, 0, 23))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",3, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  3, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(3, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",4)
else:
	attr = obj.createDoubleAttribute("posX", 4, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(4)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",23)
else:
	attr = obj.createDoubleAttribute("posZ", 23, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(23)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj11
obj = scene.getPawn("obj11")
if obj == None:
	obj = scene.createPawn("obj11")
obj.setPosition(SrVec(-4, 0, 18))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-4)
else:
	attr = obj.createDoubleAttribute("posX", -4, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-4)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",18)
else:
	attr = obj.createDoubleAttribute("posZ", 18, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(18)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj12
obj = scene.getPawn("obj12")
if obj == None:
	obj = scene.createPawn("obj12")
obj.setPosition(SrVec(-4, 0, 14))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-4)
else:
	attr = obj.createDoubleAttribute("posX", -4, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-4)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",14)
else:
	attr = obj.createDoubleAttribute("posZ", 14, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(14)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj13
obj = scene.getPawn("obj13")
if obj == None:
	obj = scene.createPawn("obj13")
obj.setPosition(SrVec(4, 0, 18))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",4)
else:
	attr = obj.createDoubleAttribute("posX", 4, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(4)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",18)
else:
	attr = obj.createDoubleAttribute("posZ", 18, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(18)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj14
obj = scene.getPawn("obj14")
if obj == None:
	obj = scene.createPawn("obj14")
obj.setPosition(SrVec(6, 0, 16))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",6)
else:
	attr = obj.createDoubleAttribute("posX", 6, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(6)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",16)
else:
	attr = obj.createDoubleAttribute("posZ", 16, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(16)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj15
obj = scene.getPawn("obj15")
if obj == None:
	obj = scene.createPawn("obj15")
obj.setPosition(SrVec(-6, 0, 16))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-6)
else:
	attr = obj.createDoubleAttribute("posX", -6, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-6)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",16)
else:
	attr = obj.createDoubleAttribute("posZ", 16, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(16)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj16
obj = scene.getPawn("obj16")
if obj == None:
	obj = scene.createPawn("obj16")
obj.setPosition(SrVec(4, 0, 14))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",4)
else:
	attr = obj.createDoubleAttribute("posX", 4, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(4)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",14)
else:
	attr = obj.createDoubleAttribute("posZ", 14, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(14)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj17
obj = scene.getPawn("obj17")
if obj == None:
	obj = scene.createPawn("obj17")
obj.setPosition(SrVec(-3, 0, 15.5))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 5.5)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 5.5, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 5.5)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-3)
else:
	attr = obj.createDoubleAttribute("posX", -3, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-3)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",15.5)
else:
	attr = obj.createDoubleAttribute("posZ", 15.5, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(15.5)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj18
obj = scene.getPawn("obj18")
if obj == None:
	obj = scene.createPawn("obj18")
obj.setPosition(SrVec(3, 0, 15.5))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 5.5)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 5.5, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 5.5)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",3)
else:
	attr = obj.createDoubleAttribute("posX", 3, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(3)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",15.5)
else:
	attr = obj.createDoubleAttribute("posZ", 15.5, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(15.5)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj19
obj = scene.getPawn("obj19")
if obj == None:
	obj = scene.createPawn("obj19")
obj.setPosition(SrVec(-6, 0, 12))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-6)
else:
	attr = obj.createDoubleAttribute("posX", -6, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-6)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",12)
else:
	attr = obj.createDoubleAttribute("posZ", 12, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(12)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj20
obj = scene.getPawn("obj20")
if obj == None:
	obj = scene.createPawn("obj20")
obj.setPosition(SrVec(6, 0, 12))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",6)
else:
	attr = obj.createDoubleAttribute("posX", 6, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(6)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",12)
else:
	attr = obj.createDoubleAttribute("posZ", 12, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(12)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj21
obj = scene.getPawn("obj21")
if obj == None:
	obj = scene.createPawn("obj21")
obj.setPosition(SrVec(0, 0, 10))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",5, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  5, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(5, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0)
else:
	attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",10)
else:
	attr = obj.createDoubleAttribute("posZ", 10, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(10)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj22
obj = scene.getPawn("obj22")
if obj == None:
	obj = scene.createPawn("obj22")
obj.setPosition(SrVec(-4, 0, 6))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",3, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  3, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(3, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-4)
else:
	attr = obj.createDoubleAttribute("posX", -4, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-4)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",6)
else:
	attr = obj.createDoubleAttribute("posZ", 6, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(6)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj23
obj = scene.getPawn("obj23")
if obj == None:
	obj = scene.createPawn("obj23")
obj.setPosition(SrVec(4, 0, 6))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",3, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  3, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(3, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",4)
else:
	attr = obj.createDoubleAttribute("posX", 4, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(4)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",6)
else:
	attr = obj.createDoubleAttribute("posZ", 6, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(6)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj24
obj = scene.getPawn("obj24")
if obj == None:
	obj = scene.createPawn("obj24")
obj.setPosition(SrVec(-1, 0, 4.1))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 3)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 3, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 3)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-1)
else:
	attr = obj.createDoubleAttribute("posX", -1, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-1)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",4.1)
else:
	attr = obj.createDoubleAttribute("posZ", 4.1, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(4.1)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj25
obj = scene.getPawn("obj25")
if obj == None:
	obj = scene.createPawn("obj25")
obj.setPosition(SrVec(1, 0, 4.1))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 3)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 3, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 3)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",1)
else:
	attr = obj.createDoubleAttribute("posX", 1, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(1)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",4.1)
else:
	attr = obj.createDoubleAttribute("posZ", 4.1, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(4.1)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj26
obj = scene.getPawn("obj26")
if obj == None:
	obj = scene.createPawn("obj26")
obj.setPosition(SrVec(-11, 0, -12))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 14)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 14, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 14)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-11)
else:
	attr = obj.createDoubleAttribute("posX", -11, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-11)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-12)
else:
	attr = obj.createDoubleAttribute("posZ", -12, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-12)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj27
obj = scene.getPawn("obj27")
if obj == None:
	obj = scene.createPawn("obj27")
obj.setPosition(SrVec(11, 0, -16))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 18)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 18, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 18)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",11)
else:
	attr = obj.createDoubleAttribute("posX", 11, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(11)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-16)
else:
	attr = obj.createDoubleAttribute("posZ", -16, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-16)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj28
obj = scene.getPawn("obj28")
if obj == None:
	obj = scene.createPawn("obj28")
obj.setPosition(SrVec(-6, 0, 2))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",5, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  5, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(5, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-6)
else:
	attr = obj.createDoubleAttribute("posX", -6, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-6)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",2)
else:
	attr = obj.createDoubleAttribute("posZ", 2, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(2)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj29
obj = scene.getPawn("obj29")
if obj == None:
	obj = scene.createPawn("obj29")
obj.setPosition(SrVec(6, 0, 2))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",5, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  5, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(5, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",6)
else:
	attr = obj.createDoubleAttribute("posX", 6, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(6)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",2)
else:
	attr = obj.createDoubleAttribute("posZ", 2, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(2)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj30
obj = scene.getPawn("obj30")
if obj == None:
	obj = scene.createPawn("obj30")
obj.setPosition(SrVec(-6, 0, -6))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",5, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  5, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(5, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-6)
else:
	attr = obj.createDoubleAttribute("posX", -6, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-6)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-6)
else:
	attr = obj.createDoubleAttribute("posZ", -6, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-6)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj31
obj = scene.getPawn("obj31")
if obj == None:
	obj = scene.createPawn("obj31")
obj.setPosition(SrVec(6, 0, -6))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",5, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  5, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(5, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",6)
else:
	attr = obj.createDoubleAttribute("posX", 6, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(6)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-6)
else:
	attr = obj.createDoubleAttribute("posZ", -6, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-6)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj32
obj = scene.getPawn("obj32")
if obj == None:
	obj = scene.createPawn("obj32")
obj.setPosition(SrVec(-3, 0, -14))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",8, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  8, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(8, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-3)
else:
	attr = obj.createDoubleAttribute("posX", -3, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-3)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-14)
else:
	attr = obj.createDoubleAttribute("posZ", -14, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-14)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj33
obj = scene.getPawn("obj33")
if obj == None:
	obj = scene.createPawn("obj33")
obj.setPosition(SrVec(1, 0, -20))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",10, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  10, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(10, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",1)
else:
	attr = obj.createDoubleAttribute("posX", 1, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(1)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-20)
else:
	attr = obj.createDoubleAttribute("posZ", -20, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-20)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj34
obj = scene.getPawn("obj34")
if obj == None:
	obj = scene.createPawn("obj34")
obj.setPosition(SrVec(-1, 0, -26))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",10, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  10, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(10, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-1)
else:
	attr = obj.createDoubleAttribute("posX", -1, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-1)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-26)
else:
	attr = obj.createDoubleAttribute("posZ", -26, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-26)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj35
obj = scene.getPawn("obj35")
if obj == None:
	obj = scene.createPawn("obj35")
obj.setPosition(SrVec(-25, 0, 14))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",3, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  3, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(3, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-25)
else:
	attr = obj.createDoubleAttribute("posX", -25, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-25)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",14)
else:
	attr = obj.createDoubleAttribute("posZ", 14, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(14)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj36
obj = scene.getPawn("obj36")
if obj == None:
	obj = scene.createPawn("obj36")
obj.setPosition(SrVec(-20.75, 0, 11.5))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",5, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  5, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(5, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-20.75)
else:
	attr = obj.createDoubleAttribute("posX", -20.75, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-20.75)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",11.5)
else:
	attr = obj.createDoubleAttribute("posZ", 11.5, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(11.5)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj37
obj = scene.getPawn("obj37")
if obj == None:
	obj = scene.createPawn("obj37")
obj.setPosition(SrVec(8, 0, -34))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",30, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  30, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(30, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",8)
else:
	attr = obj.createDoubleAttribute("posX", 8, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(8)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-34)
else:
	attr = obj.createDoubleAttribute("posZ", -34, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-34)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj38
obj = scene.getPawn("obj38")
if obj == None:
	obj = scene.createPawn("obj38")
obj.setPosition(SrVec(-17.2, 0, 26))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 2)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 2, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 2)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-17.2)
else:
	attr = obj.createDoubleAttribute("posX", -17.2, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-17.2)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",26)
else:
	attr = obj.createDoubleAttribute("posZ", 26, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(26)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj39
obj = scene.getPawn("obj39")
if obj == None:
	obj = scene.createPawn("obj39")
obj.setPosition(SrVec(-19.9, 0, 28))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 2)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 2, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 2)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-19.9)
else:
	attr = obj.createDoubleAttribute("posX", -19.9, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-19.9)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",28)
else:
	attr = obj.createDoubleAttribute("posZ", 28, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(28)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj40
obj = scene.getPawn("obj40")
if obj == None:
	obj = scene.createPawn("obj40")
obj.setPosition(SrVec(-22, 0, -12.1))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 22)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 22, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 22)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-22)
else:
	attr = obj.createDoubleAttribute("posX", -22, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-22)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-12.1)
else:
	attr = obj.createDoubleAttribute("posZ", -12.1, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-12.1)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj41
obj = scene.getPawn("obj41")
if obj == None:
	obj = scene.createPawn("obj41")
obj.setPosition(SrVec(28.2124, 0, 0.150129))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 16)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 16, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 16)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",28.2124)
else:
	attr = obj.createDoubleAttribute("posX", 28.2124, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(28.2124)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",0.150129)
else:
	attr = obj.createDoubleAttribute("posZ", 0.150129, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(0.150129)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj42
obj = scene.getPawn("obj42")
if obj == None:
	obj = scene.createPawn("obj42")
obj.setPosition(SrVec(-13, 0, -4.5))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-13)
else:
	attr = obj.createDoubleAttribute("posX", -13, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-13)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-4.5)
else:
	attr = obj.createDoubleAttribute("posZ", -4.5, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-4.5)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj43
obj = scene.getPawn("obj43")
if obj == None:
	obj = scene.createPawn("obj43")
obj.setPosition(SrVec(-16, 0, -7))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-16)
else:
	attr = obj.createDoubleAttribute("posX", -16, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-16)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-7)
else:
	attr = obj.createDoubleAttribute("posZ", -7, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-7)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj44
obj = scene.getPawn("obj44")
if obj == None:
	obj = scene.createPawn("obj44")
obj.setPosition(SrVec(-20, 0, -9))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-20)
else:
	attr = obj.createDoubleAttribute("posX", -20, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-20)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-9)
else:
	attr = obj.createDoubleAttribute("posZ", -9, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-9)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj45
obj = scene.getPawn("obj45")
if obj == None:
	obj = scene.createPawn("obj45")
obj.setPosition(SrVec(-16, 0, -12.5))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-16)
else:
	attr = obj.createDoubleAttribute("posX", -16, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-16)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-12.5)
else:
	attr = obj.createDoubleAttribute("posZ", -12.5, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-12.5)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj46
obj = scene.getPawn("obj46")
if obj == None:
	obj = scene.createPawn("obj46")
obj.setPosition(SrVec(-13, 0, -15))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-13)
else:
	attr = obj.createDoubleAttribute("posX", -13, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-13)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-15)
else:
	attr = obj.createDoubleAttribute("posZ", -15, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-15)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj47
obj = scene.getPawn("obj47")
if obj == None:
	obj = scene.createPawn("obj47")
obj.setPosition(SrVec(-20, 0, -20))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-20)
else:
	attr = obj.createDoubleAttribute("posX", -20, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-20)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-20)
else:
	attr = obj.createDoubleAttribute("posZ", -20, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-20)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj48
obj = scene.getPawn("obj48")
if obj == None:
	obj = scene.createPawn("obj48")
obj.setPosition(SrVec(-17, 0, -17))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-17)
else:
	attr = obj.createDoubleAttribute("posX", -17, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-17)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-17)
else:
	attr = obj.createDoubleAttribute("posZ", -17, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-17)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj49
obj = scene.getPawn("obj49")
if obj == None:
	obj = scene.createPawn("obj49")
obj.setPosition(SrVec(-17.1129, 0, -22))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-17.1129)
else:
	attr = obj.createDoubleAttribute("posX", -17.1129, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-17.1129)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-22)
else:
	attr = obj.createDoubleAttribute("posZ", -22, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-22)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj50
obj = scene.getPawn("obj50")
if obj == None:
	obj = scene.createPawn("obj50")
obj.setPosition(SrVec(-13, 0, -24))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-13)
else:
	attr = obj.createDoubleAttribute("posX", -13, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-13)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-24)
else:
	attr = obj.createDoubleAttribute("posZ", -24, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-24)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj59
obj = scene.getPawn("obj59")
if obj == None:
	obj = scene.createPawn("obj59")
obj.setPosition(SrVec(-19.8, 0, 24))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",4.25, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  4.25, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(4.25, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-19.8)
else:
	attr = obj.createDoubleAttribute("posX", -19.8, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-19.8)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",24)
else:
	attr = obj.createDoubleAttribute("posZ", 24, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(24)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj57
obj = scene.getPawn("obj57")
if obj == None:
	obj = scene.createPawn("obj57")
obj.setPosition(SrVec(-16, 0, 15.5))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-16)
else:
	attr = obj.createDoubleAttribute("posX", -16, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-16)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",15.5)
else:
	attr = obj.createDoubleAttribute("posZ", 15.5, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(15.5)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj56
obj = scene.getPawn("obj56")
if obj == None:
	obj = scene.createPawn("obj56")
obj.setPosition(SrVec(-18, 0, 18.2032))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-18)
else:
	attr = obj.createDoubleAttribute("posX", -18, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-18)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",18.2032)
else:
	attr = obj.createDoubleAttribute("posZ", 18.2032, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(18.2032)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj55
obj = scene.getPawn("obj55")
if obj == None:
	obj = scene.createPawn("obj55")
obj.setPosition(SrVec(-16, 0, 20.6))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",2, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  2, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(2, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-16)
else:
	attr = obj.createDoubleAttribute("posX", -16, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-16)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",20.6)
else:
	attr = obj.createDoubleAttribute("posZ", 20.6, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(20.6)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj54
obj = scene.getPawn("obj54")
if obj == None:
	obj = scene.createPawn("obj54")
obj.setPosition(SrVec(-17, 0, 29.9))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",3, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  3, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(3, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-17)
else:
	attr = obj.createDoubleAttribute("posX", -17, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-17)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",29.9)
else:
	attr = obj.createDoubleAttribute("posZ", 29.9, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(29.9)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj52
obj = scene.getPawn("obj52")
if obj == None:
	obj = scene.createPawn("obj52")
obj.setPosition(SrVec(-32.8742, 0, 9.8))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",3, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  3, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(3, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-32.8742)
else:
	attr = obj.createDoubleAttribute("posX", -32.8742, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-32.8742)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",9.8)
else:
	attr = obj.createDoubleAttribute("posZ", 9.8, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(9.8)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj51
obj = scene.getPawn("obj51")
if obj == None:
	obj = scene.createPawn("obj51")
obj.setPosition(SrVec(-27, 0, 28))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",3, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  3, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(3, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-27)
else:
	attr = obj.createDoubleAttribute("posX", -27, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-27)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",28)
else:
	attr = obj.createDoubleAttribute("posZ", 28, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(28)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj60
obj = scene.getPawn("obj60")
if obj == None:
	obj = scene.createPawn("obj60")
obj.setPosition(SrVec(-18, 0, -2))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",4, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  4, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(4, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-18)
else:
	attr = obj.createDoubleAttribute("posX", -18, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-18)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-2)
else:
	attr = obj.createDoubleAttribute("posZ", -2, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-2)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj61
obj = scene.getPawn("obj61")
if obj == None:
	obj = scene.createPawn("obj61")
obj.setPosition(SrVec(-14, 0, 14))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 16)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 16, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 16)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-14)
else:
	attr = obj.createDoubleAttribute("posX", -14, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-14)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",14)
else:
	attr = obj.createDoubleAttribute("posZ", 14, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(14)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj62
obj = scene.getPawn("obj62")
if obj == None:
	obj = scene.createPawn("obj62")
obj.setPosition(SrVec(-11, 0, 18))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 16)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 16, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 16)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-11)
else:
	attr = obj.createDoubleAttribute("posX", -11, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-11)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",18)
else:
	attr = obj.createDoubleAttribute("posZ", 18, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(18)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj63
obj = scene.getPawn("obj63")
if obj == None:
	obj = scene.createPawn("obj63")
obj.setPosition(SrVec(-21, 0, 34))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",10, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  10, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(10, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-21)
else:
	attr = obj.createDoubleAttribute("posX", -21, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-21)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",34)
else:
	attr = obj.createDoubleAttribute("posZ", 34, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(34)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj64
obj = scene.getPawn("obj64")
if obj == None:
	obj = scene.createPawn("obj64")
obj.setPosition(SrVec(-23, 0, 29))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 5)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 5, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 5)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-23)
else:
	attr = obj.createDoubleAttribute("posX", -23, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-23)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",29)
else:
	attr = obj.createDoubleAttribute("posZ", 29, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(29)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj65
obj = scene.getPawn("obj65")
if obj == None:
	obj = scene.createPawn("obj65")
obj.setPosition(SrVec(-20.1, 0, 17.75))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 6.2)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 6.2, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 6.2)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-20.1)
else:
	attr = obj.createDoubleAttribute("posX", -20.1, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-20.1)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",17.75)
else:
	attr = obj.createDoubleAttribute("posZ", 17.75, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(17.75)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj66
obj = scene.getPawn("obj66")
if obj == None:
	obj = scene.createPawn("obj66")
obj.setPosition(SrVec(-28, 0, 11.89))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 2.15)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 2.15, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 2.15)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-28)
else:
	attr = obj.createDoubleAttribute("posX", -28, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-28)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",11.89)
else:
	attr = obj.createDoubleAttribute("posZ", 11.89, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(11.89)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj67
obj = scene.getPawn("obj67")
if obj == None:
	obj = scene.createPawn("obj67")
obj.setPosition(SrVec(-21, 0, 9.8))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",7, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  7, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(7, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-21)
else:
	attr = obj.createDoubleAttribute("posX", -21, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-21)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",9.8)
else:
	attr = obj.createDoubleAttribute("posZ", 9.8, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(9.8)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: mine1
obj = scene.getPawn("mine1")
if obj == None:
	obj = scene.createPawn("mine1")
obj.setPosition(SrVec(-0.268562, 0, -1.23866))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-0.268562)
else:
	attr = obj.createDoubleAttribute("posX", -0.268562, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-0.268562)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-1.23866)
else:
	attr = obj.createDoubleAttribute("posZ", -1.23866, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-1.23866)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine2
obj = scene.getPawn("mine2")
if obj == None:
	obj = scene.createPawn("mine2")
obj.setPosition(SrVec(4.98754, 0, -1.85641))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",4.98754)
else:
	attr = obj.createDoubleAttribute("posX", 4.98754, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(4.98754)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-1.85641)
else:
	attr = obj.createDoubleAttribute("posZ", -1.85641, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-1.85641)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine3
obj = scene.getPawn("mine3")
if obj == None:
	obj = scene.createPawn("mine3")
obj.setPosition(SrVec(3.16518, 0, -1.5103))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",3.16518)
else:
	attr = obj.createDoubleAttribute("posX", 3.16518, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(3.16518)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-1.5103)
else:
	attr = obj.createDoubleAttribute("posZ", -1.5103, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-1.5103)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine4
obj = scene.getPawn("mine4")
if obj == None:
	obj = scene.createPawn("mine4")
obj.setPosition(SrVec(1.36445, 0, -1.4047))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",1.36445)
else:
	attr = obj.createDoubleAttribute("posX", 1.36445, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(1.36445)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-1.4047)
else:
	attr = obj.createDoubleAttribute("posZ", -1.4047, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-1.4047)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine5
obj = scene.getPawn("mine5")
if obj == None:
	obj = scene.createPawn("mine5")
obj.setPosition(SrVec(-0.568803, 0, -4.03058))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-0.568803)
else:
	attr = obj.createDoubleAttribute("posX", -0.568803, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-0.568803)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-4.03058)
else:
	attr = obj.createDoubleAttribute("posZ", -4.03058, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-4.03058)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine6
obj = scene.getPawn("mine6")
if obj == None:
	obj = scene.createPawn("mine6")
obj.setPosition(SrVec(0.693111, 0, -5.03406))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0.693111)
else:
	attr = obj.createDoubleAttribute("posX", 0.693111, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0.693111)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-5.03406)
else:
	attr = obj.createDoubleAttribute("posZ", -5.03406, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-5.03406)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine7
obj = scene.getPawn("mine7")
if obj == None:
	obj = scene.createPawn("mine7")
obj.setPosition(SrVec(3.23077, 0, -4.06073))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",3.23077)
else:
	attr = obj.createDoubleAttribute("posX", 3.23077, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(3.23077)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-4.06073)
else:
	attr = obj.createDoubleAttribute("posZ", -4.06073, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-4.06073)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine8
obj = scene.getPawn("mine8")
if obj == None:
	obj = scene.createPawn("mine8")
obj.setPosition(SrVec(9.02747, 0, -1.34442))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",9.02747)
else:
	attr = obj.createDoubleAttribute("posX", 9.02747, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(9.02747)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-1.34442)
else:
	attr = obj.createDoubleAttribute("posZ", -1.34442, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-1.34442)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine9
obj = scene.getPawn("mine9")
if obj == None:
	obj = scene.createPawn("mine9")
obj.setPosition(SrVec(9, 0, -4.61792))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",9)
else:
	attr = obj.createDoubleAttribute("posX", 9, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(9)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-4.61792)
else:
	attr = obj.createDoubleAttribute("posZ", -4.61792, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-4.61792)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine10
obj = scene.getPawn("mine10")
if obj == None:
	obj = scene.createPawn("mine10")
obj.setPosition(SrVec(6.47488, 0, -2.69389))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",6.47488)
else:
	attr = obj.createDoubleAttribute("posX", 6.47488, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(6.47488)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-2.69389)
else:
	attr = obj.createDoubleAttribute("posZ", -2.69389, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-2.69389)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine11
obj = scene.getPawn("mine11")
if obj == None:
	obj = scene.createPawn("mine11")
obj.setPosition(SrVec(-1, 0, -0.0327492))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-1)
else:
	attr = obj.createDoubleAttribute("posX", -1, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-1)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-0.0327492)
else:
	attr = obj.createDoubleAttribute("posZ", -0.0327492, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-0.0327492)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine12
obj = scene.getPawn("mine12")
if obj == None:
	obj = scene.createPawn("mine12")
obj.setPosition(SrVec(-1.92259, 0, -3.62921))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-1.92259)
else:
	attr = obj.createDoubleAttribute("posX", -1.92259, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-1.92259)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-3.62921)
else:
	attr = obj.createDoubleAttribute("posZ", -3.62921, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-3.62921)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine13
obj = scene.getPawn("mine13")
if obj == None:
	obj = scene.createPawn("mine13")
obj.setPosition(SrVec(-5.49136, 0, -0.990237))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-5.49136)
else:
	attr = obj.createDoubleAttribute("posX", -5.49136, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-5.49136)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-0.990237)
else:
	attr = obj.createDoubleAttribute("posZ", -0.990237, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-0.990237)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine14
obj = scene.getPawn("mine14")
if obj == None:
	obj = scene.createPawn("mine14")
obj.setPosition(SrVec(-3.6068, 0, -3.51983))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-3.6068)
else:
	attr = obj.createDoubleAttribute("posX", -3.6068, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-3.6068)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-3.51983)
else:
	attr = obj.createDoubleAttribute("posZ", -3.51983, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-3.51983)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine15
obj = scene.getPawn("mine15")
if obj == None:
	obj = scene.createPawn("mine15")
obj.setPosition(SrVec(-4.70414, 0, -2.53319))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",False)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", False, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-4.70414)
else:
	attr = obj.createDoubleAttribute("posX", -4.70414, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-4.70414)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-2.53319)
else:
	attr = obj.createDoubleAttribute("posZ", -2.53319, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-2.53319)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",False)
else:
	attr = obj.createBoolAttribute("showStaticMesh", False, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine16
obj = scene.getPawn("mine16")
if obj == None:
	obj = scene.createPawn("mine16")
obj.setPosition(SrVec(-6.97267, 0, -0.153148))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-6.97267)
else:
	attr = obj.createDoubleAttribute("posX", -6.97267, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-6.97267)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-0.153148)
else:
	attr = obj.createDoubleAttribute("posZ", -0.153148, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-0.153148)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine17
obj = scene.getPawn("mine17")
if obj == None:
	obj = scene.createPawn("mine17")
obj.setPosition(SrVec(-9.16797, 0, -3.07477))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-9.16797)
else:
	attr = obj.createDoubleAttribute("posX", -9.16797, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-9.16797)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-3.07477)
else:
	attr = obj.createDoubleAttribute("posZ", -3.07477, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-3.07477)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine18
obj = scene.getPawn("mine18")
if obj == None:
	obj = scene.createPawn("mine18")
obj.setPosition(SrVec(-6.59547, 0, -5.05297))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-6.59547)
else:
	attr = obj.createDoubleAttribute("posX", -6.59547, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-6.59547)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-5.05297)
else:
	attr = obj.createDoubleAttribute("posZ", -5.05297, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-5.05297)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine19
obj = scene.getPawn("mine19")
if obj == None:
	obj = scene.createPawn("mine19")
obj.setPosition(SrVec(1.35446, 0, -7.11754))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",1.35446)
else:
	attr = obj.createDoubleAttribute("posX", 1.35446, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(1.35446)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-7.11754)
else:
	attr = obj.createDoubleAttribute("posZ", -7.11754, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-7.11754)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine20
obj = scene.getPawn("mine20")
if obj == None:
	obj = scene.createPawn("mine20")
obj.setPosition(SrVec(0.292102, 0, -8.37581))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0.292102)
else:
	attr = obj.createDoubleAttribute("posX", 0.292102, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0.292102)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-8.37581)
else:
	attr = obj.createDoubleAttribute("posZ", -8.37581, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-8.37581)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine21
obj = scene.getPawn("mine21")
if obj == None:
	obj = scene.createPawn("mine21")
obj.setPosition(SrVec(-0.914917, 0, -9.02588))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-0.914917)
else:
	attr = obj.createDoubleAttribute("posX", -0.914917, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-0.914917)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-9.02588)
else:
	attr = obj.createDoubleAttribute("posZ", -9.02588, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-9.02588)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine22
obj = scene.getPawn("mine22")
if obj == None:
	obj = scene.createPawn("mine22")
obj.setPosition(SrVec(-2.03622, 0, -10))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-2.03622)
else:
	attr = obj.createDoubleAttribute("posX", -2.03622, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-2.03622)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-10)
else:
	attr = obj.createDoubleAttribute("posZ", -10, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-10)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine23
obj = scene.getPawn("mine23")
if obj == None:
	obj = scene.createPawn("mine23")
obj.setPosition(SrVec(-3.38082, 0, -10.6212))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-3.38082)
else:
	attr = obj.createDoubleAttribute("posX", -3.38082, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-3.38082)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-10.6212)
else:
	attr = obj.createDoubleAttribute("posZ", -10.6212, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-10.6212)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine24
obj = scene.getPawn("mine24")
if obj == None:
	obj = scene.createPawn("mine24")
obj.setPosition(SrVec(-4.75142, 0, -11.2771))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-4.75142)
else:
	attr = obj.createDoubleAttribute("posX", -4.75142, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-4.75142)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-11.2771)
else:
	attr = obj.createDoubleAttribute("posZ", -11.2771, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-11.2771)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine25
obj = scene.getPawn("mine25")
if obj == None:
	obj = scene.createPawn("mine25")
obj.setPosition(SrVec(3.23734, 0, -13.0842))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",3.23734)
else:
	attr = obj.createDoubleAttribute("posX", 3.23734, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(3.23734)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-13.0842)
else:
	attr = obj.createDoubleAttribute("posZ", -13.0842, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-13.0842)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine26
obj = scene.getPawn("mine26")
if obj == None:
	obj = scene.createPawn("mine26")
obj.setPosition(SrVec(4.14712, 0, -12.059))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",4.14712)
else:
	attr = obj.createDoubleAttribute("posX", 4.14712, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(4.14712)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-12.059)
else:
	attr = obj.createDoubleAttribute("posZ", -12.059, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-12.059)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine27
obj = scene.getPawn("mine27")
if obj == None:
	obj = scene.createPawn("mine27")
obj.setPosition(SrVec(4.58403, 0, -10.7285))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",4.58403)
else:
	attr = obj.createDoubleAttribute("posX", 4.58403, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(4.58403)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-10.7285)
else:
	attr = obj.createDoubleAttribute("posZ", -10.7285, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-10.7285)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine28
obj = scene.getPawn("mine28")
if obj == None:
	obj = scene.createPawn("mine28")
obj.setPosition(SrVec(5.52889, 0, -9.49579))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",5.52889)
else:
	attr = obj.createDoubleAttribute("posX", 5.52889, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(5.52889)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-9.49579)
else:
	attr = obj.createDoubleAttribute("posZ", -9.49579, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-9.49579)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine29
obj = scene.getPawn("mine29")
if obj == None:
	obj = scene.createPawn("mine29")
obj.setPosition(SrVec(6.39846, 0, -8.36206))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",6.39846)
else:
	attr = obj.createDoubleAttribute("posX", 6.39846, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(6.39846)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-8.36206)
else:
	attr = obj.createDoubleAttribute("posZ", -8.36206, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-8.36206)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine30
obj = scene.getPawn("mine30")
if obj == None:
	obj = scene.createPawn("mine30")
obj.setPosition(SrVec(9.0224, 0, -10.6995))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",9.0224)
else:
	attr = obj.createDoubleAttribute("posX", 9.0224, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(9.0224)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-10.6995)
else:
	attr = obj.createDoubleAttribute("posZ", -10.6995, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-10.6995)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine31
obj = scene.getPawn("mine31")
if obj == None:
	obj = scene.createPawn("mine31")
obj.setPosition(SrVec(6.59952, 0, -17))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",6.59952)
else:
	attr = obj.createDoubleAttribute("posX", 6.59952, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(6.59952)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-17)
else:
	attr = obj.createDoubleAttribute("posZ", -17, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-17)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine32
obj = scene.getPawn("mine32")
if obj == None:
	obj = scene.createPawn("mine32")
obj.setPosition(SrVec(3, 0, -18))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",3)
else:
	attr = obj.createDoubleAttribute("posX", 3, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(3)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-18)
else:
	attr = obj.createDoubleAttribute("posZ", -18, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-18)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine33
obj = scene.getPawn("mine33")
if obj == None:
	obj = scene.createPawn("mine33")
obj.setPosition(SrVec(3, 0, -16))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",3)
else:
	attr = obj.createDoubleAttribute("posX", 3, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(3)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-16)
else:
	attr = obj.createDoubleAttribute("posZ", -16, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-16)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine34
obj = scene.getPawn("mine34")
if obj == None:
	obj = scene.createPawn("mine34")
obj.setPosition(SrVec(0, 0, -17))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0)
else:
	attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-17)
else:
	attr = obj.createDoubleAttribute("posZ", -17, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-17)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine35
obj = scene.getPawn("mine35")
if obj == None:
	obj = scene.createPawn("mine35")
obj.setPosition(SrVec(-1.2, 0, -19.1267))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-1.2)
else:
	attr = obj.createDoubleAttribute("posX", -1.2, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-1.2)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-19.1267)
else:
	attr = obj.createDoubleAttribute("posZ", -19.1267, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-19.1267)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine36
obj = scene.getPawn("mine36")
if obj == None:
	obj = scene.createPawn("mine36")
obj.setPosition(SrVec(-1.2, 0, -14.7676))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-1.2)
else:
	attr = obj.createDoubleAttribute("posX", -1.2, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-1.2)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-14.7676)
else:
	attr = obj.createDoubleAttribute("posZ", -14.7676, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-14.7676)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine37
obj = scene.getPawn("mine37")
if obj == None:
	obj = scene.createPawn("mine37")
obj.setPosition(SrVec(-3.5, 0, -18))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-3.5)
else:
	attr = obj.createDoubleAttribute("posX", -3.5, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-3.5)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-18)
else:
	attr = obj.createDoubleAttribute("posZ", -18, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-18)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine38
obj = scene.getPawn("mine38")
if obj == None:
	obj = scene.createPawn("mine38")
obj.setPosition(SrVec(-3.5, 0, -16))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-3.5)
else:
	attr = obj.createDoubleAttribute("posX", -3.5, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-3.5)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-16)
else:
	attr = obj.createDoubleAttribute("posZ", -16, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-16)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine39
obj = scene.getPawn("mine39")
if obj == None:
	obj = scene.createPawn("mine39")
obj.setPosition(SrVec(-7, 0, -17))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-7)
else:
	attr = obj.createDoubleAttribute("posX", -7, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-7)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-17)
else:
	attr = obj.createDoubleAttribute("posZ", -17, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-17)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine40
obj = scene.getPawn("mine40")
if obj == None:
	obj = scene.createPawn("mine40")
obj.setPosition(SrVec(-8, 0, -18))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-8)
else:
	attr = obj.createDoubleAttribute("posX", -8, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-8)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-18)
else:
	attr = obj.createDoubleAttribute("posZ", -18, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-18)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine410
obj = scene.getPawn("mine410")
if obj == None:
	obj = scene.createPawn("mine410")
obj.setPosition(SrVec(-8, 0, -16))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-8)
else:
	attr = obj.createDoubleAttribute("posX", -8, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-8)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-16)
else:
	attr = obj.createDoubleAttribute("posZ", -16, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-16)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine41
obj = scene.getPawn("mine41")
if obj == None:
	obj = scene.createPawn("mine41")
obj.setPosition(SrVec(-8.3623, 0, -20.7278))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-8.3623)
else:
	attr = obj.createDoubleAttribute("posX", -8.3623, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-8.3623)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-20.7278)
else:
	attr = obj.createDoubleAttribute("posZ", -20.7278, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-20.7278)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine42
obj = scene.getPawn("mine42")
if obj == None:
	obj = scene.createPawn("mine42")
obj.setPosition(SrVec(-7.16247, 0, -21.4104))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-7.16247)
else:
	attr = obj.createDoubleAttribute("posX", -7.16247, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-7.16247)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-21.4104)
else:
	attr = obj.createDoubleAttribute("posZ", -21.4104, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-21.4104)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine43
obj = scene.getPawn("mine43")
if obj == None:
	obj = scene.createPawn("mine43")
obj.setPosition(SrVec(-9.24207, 0, -24.9362))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-9.24207)
else:
	attr = obj.createDoubleAttribute("posX", -9.24207, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-9.24207)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-24.9362)
else:
	attr = obj.createDoubleAttribute("posZ", -24.9362, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-24.9362)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine44
obj = scene.getPawn("mine44")
if obj == None:
	obj = scene.createPawn("mine44")
obj.setPosition(SrVec(-0.00167594, 0, -22))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-0.00167594)
else:
	attr = obj.createDoubleAttribute("posX", -0.00167594, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-0.00167594)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-22)
else:
	attr = obj.createDoubleAttribute("posZ", -22, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-22)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine45
obj = scene.getPawn("mine45")
if obj == None:
	obj = scene.createPawn("mine45")
obj.setPosition(SrVec(2.6971, 0, -22.9364))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",2.6971)
else:
	attr = obj.createDoubleAttribute("posX", 2.6971, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(2.6971)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-22.9364)
else:
	attr = obj.createDoubleAttribute("posZ", -22.9364, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-22.9364)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine46
obj = scene.getPawn("mine46")
if obj == None:
	obj = scene.createPawn("mine46")
obj.setPosition(SrVec(0, 0, -23.9348))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0)
else:
	attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-23.9348)
else:
	attr = obj.createDoubleAttribute("posZ", -23.9348, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-23.9348)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine47
obj = scene.getPawn("mine47")
if obj == None:
	obj = scene.createPawn("mine47")
obj.setPosition(SrVec(-1.82884, 0, -22))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-1.82884)
else:
	attr = obj.createDoubleAttribute("posX", -1.82884, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-1.82884)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-22)
else:
	attr = obj.createDoubleAttribute("posZ", -22, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-22)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine48
obj = scene.getPawn("mine48")
if obj == None:
	obj = scene.createPawn("mine48")
obj.setPosition(SrVec(-1.74955, 0, -23.8862))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-1.74955)
else:
	attr = obj.createDoubleAttribute("posX", -1.74955, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-1.74955)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-23.8862)
else:
	attr = obj.createDoubleAttribute("posZ", -23.8862, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-23.8862)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine49
obj = scene.getPawn("mine49")
if obj == None:
	obj = scene.createPawn("mine49")
obj.setPosition(SrVec(-3.50953, 0, -22.0003))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-3.50953)
else:
	attr = obj.createDoubleAttribute("posX", -3.50953, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-3.50953)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-22.0003)
else:
	attr = obj.createDoubleAttribute("posZ", -22.0003, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-22.0003)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine50
obj = scene.getPawn("mine50")
if obj == None:
	obj = scene.createPawn("mine50")
obj.setPosition(SrVec(-3.45294, 0, -23.9866))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-3.45294)
else:
	attr = obj.createDoubleAttribute("posX", -3.45294, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-3.45294)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-23.9866)
else:
	attr = obj.createDoubleAttribute("posZ", -23.9866, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-23.9866)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine51
obj = scene.getPawn("mine51")
if obj == None:
	obj = scene.createPawn("mine51")
obj.setPosition(SrVec(-5.10447, 0, -23.9358))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-5.10447)
else:
	attr = obj.createDoubleAttribute("posX", -5.10447, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-5.10447)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-23.9358)
else:
	attr = obj.createDoubleAttribute("posZ", -23.9358, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-23.9358)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine52
obj = scene.getPawn("mine52")
if obj == None:
	obj = scene.createPawn("mine52")
obj.setPosition(SrVec(-6.90555, 0, -23.9366))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-6.90555)
else:
	attr = obj.createDoubleAttribute("posX", -6.90555, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-6.90555)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-23.9366)
else:
	attr = obj.createDoubleAttribute("posZ", -23.9366, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-23.9366)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine53
obj = scene.getPawn("mine53")
if obj == None:
	obj = scene.createPawn("mine53")
obj.setPosition(SrVec(-7.96415, 0, -24.4327))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-7.96415)
else:
	attr = obj.createDoubleAttribute("posX", -7.96415, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-7.96415)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-24.4327)
else:
	attr = obj.createDoubleAttribute("posZ", -24.4327, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-24.4327)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine54
obj = scene.getPawn("mine54")
if obj == None:
	obj = scene.createPawn("mine54")
obj.setPosition(SrVec(-4.66199, 0, -22))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-4.66199)
else:
	attr = obj.createDoubleAttribute("posX", -4.66199, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-4.66199)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-22)
else:
	attr = obj.createDoubleAttribute("posZ", -22, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-22)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine55
obj = scene.getPawn("mine55")
if obj == None:
	obj = scene.createPawn("mine55")
obj.setPosition(SrVec(-6.00724, 0, -22))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-6.00724)
else:
	attr = obj.createDoubleAttribute("posX", -6.00724, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-6.00724)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-22)
else:
	attr = obj.createDoubleAttribute("posZ", -22, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-22)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: obj68
obj = scene.getPawn("obj68")
if obj == None:
	obj = scene.createPawn("obj68")
obj.setPosition(SrVec(-22, 0, 21.501))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 2.4)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 2.4, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 2.4)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-22)
else:
	attr = obj.createDoubleAttribute("posX", -22, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-22)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",21.501)
else:
	attr = obj.createDoubleAttribute("posZ", 21.501, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(21.501)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj69
obj = scene.getPawn("obj69")
if obj == None:
	obj = scene.createPawn("obj69")
obj.setPosition(SrVec(-22.1, 0, 15.9))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1.8)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1.8, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1.8)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-22.1)
else:
	attr = obj.createDoubleAttribute("posX", -22.1, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-22.1)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",15.9)
else:
	attr = obj.createDoubleAttribute("posZ", 15.9, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(15.9)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj70
obj = scene.getPawn("obj70")
if obj == None:
	obj = scene.createPawn("obj70")
obj.setPosition(SrVec(-24, 0, 22))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 6)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 6, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 6)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-24)
else:
	attr = obj.createDoubleAttribute("posX", -24, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-24)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",22)
else:
	attr = obj.createDoubleAttribute("posZ", 22, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(22)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj71
obj = scene.getPawn("obj71")
if obj == None:
	obj = scene.createPawn("obj71")
obj.setPosition(SrVec(-26, 0, 20.1))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 6)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 6, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 6)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-26)
else:
	attr = obj.createDoubleAttribute("posX", -26, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-26)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",20.1)
else:
	attr = obj.createDoubleAttribute("posZ", 20.1, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(20.1)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj72
obj = scene.getPawn("obj72")
if obj == None:
	obj = scene.createPawn("obj72")
obj.setPosition(SrVec(-36, 0, -10))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 30)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 30, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 30)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-36)
else:
	attr = obj.createDoubleAttribute("posX", -36, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-36)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-10)
else:
	attr = obj.createDoubleAttribute("posZ", -10, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-10)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj73
obj = scene.getPawn("obj73")
if obj == None:
	obj = scene.createPawn("obj73")
obj.setPosition(SrVec(0.885903, 0, -40.0338))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",37, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  37, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(37, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0.885903)
else:
	attr = obj.createDoubleAttribute("posX", 0.885903, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0.885903)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-40.0338)
else:
	attr = obj.createDoubleAttribute("posZ", -40.0338, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-40.0338)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: mine57
obj = scene.getPawn("mine57")
if obj == None:
	obj = scene.createPawn("mine57")
obj.setPosition(SrVec(-33.0615, 0, 4.1115))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-33.0615)
else:
	attr = obj.createDoubleAttribute("posX", -33.0615, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-33.0615)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",4.1115)
else:
	attr = obj.createDoubleAttribute("posZ", 4.1115, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(4.1115)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine56
obj = scene.getPawn("mine56")
if obj == None:
	obj = scene.createPawn("mine56")
obj.setPosition(SrVec(-24.9816, 0, 4.09348))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-24.9816)
else:
	attr = obj.createDoubleAttribute("posX", -24.9816, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-24.9816)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",4.09348)
else:
	attr = obj.createDoubleAttribute("posZ", 4.09348, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(4.09348)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine58
obj = scene.getPawn("mine58")
if obj == None:
	obj = scene.createPawn("mine58")
obj.setPosition(SrVec(-28.8245, 0, 7.00814))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-28.8245)
else:
	attr = obj.createDoubleAttribute("posX", -28.8245, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-28.8245)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",7.00814)
else:
	attr = obj.createDoubleAttribute("posZ", 7.00814, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(7.00814)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine60
obj = scene.getPawn("mine60")
if obj == None:
	obj = scene.createPawn("mine60")
obj.setPosition(SrVec(-30, 0, -8.48865))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-30)
else:
	attr = obj.createDoubleAttribute("posX", -30, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-30)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-8.48865)
else:
	attr = obj.createDoubleAttribute("posZ", -8.48865, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-8.48865)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine61
obj = scene.getPawn("mine61")
if obj == None:
	obj = scene.createPawn("mine61")
obj.setPosition(SrVec(-32.9772, 0, -2.42474))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-32.9772)
else:
	attr = obj.createDoubleAttribute("posX", -32.9772, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-32.9772)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-2.42474)
else:
	attr = obj.createDoubleAttribute("posZ", -2.42474, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-2.42474)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine62
obj = scene.getPawn("mine62")
if obj == None:
	obj = scene.createPawn("mine62")
obj.setPosition(SrVec(-34.226, 0, 0))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-34.226)
else:
	attr = obj.createDoubleAttribute("posX", -34.226, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-34.226)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",0)
else:
	attr = obj.createDoubleAttribute("posZ", 0, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine63
obj = scene.getPawn("mine63")
if obj == None:
	obj = scene.createPawn("mine63")
obj.setPosition(SrVec(-35.2424, 0, 0))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-35.2424)
else:
	attr = obj.createDoubleAttribute("posX", -35.2424, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-35.2424)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",0)
else:
	attr = obj.createDoubleAttribute("posZ", 0, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine64
obj = scene.getPawn("mine64")
if obj == None:
	obj = scene.createPawn("mine64")
obj.setPosition(SrVec(-31.4089, 0, -0.000861213))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-31.4089)
else:
	attr = obj.createDoubleAttribute("posX", -31.4089, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-31.4089)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-0.000861213)
else:
	attr = obj.createDoubleAttribute("posZ", -0.000861213, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-0.000861213)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine65
obj = scene.getPawn("mine65")
if obj == None:
	obj = scene.createPawn("mine65")
obj.setPosition(SrVec(-28.1226, 0, 0.0777048))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-28.1226)
else:
	attr = obj.createDoubleAttribute("posX", -28.1226, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-28.1226)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",0.0777048)
else:
	attr = obj.createDoubleAttribute("posZ", 0.0777048, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(0.0777048)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine66
obj = scene.getPawn("mine66")
if obj == None:
	obj = scene.createPawn("mine66")
obj.setPosition(SrVec(-26.7931, 0, 0.0781875))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-26.7931)
else:
	attr = obj.createDoubleAttribute("posX", -26.7931, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-26.7931)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",0.0781875)
else:
	attr = obj.createDoubleAttribute("posZ", 0.0781875, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(0.0781875)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine67
obj = scene.getPawn("mine67")
if obj == None:
	obj = scene.createPawn("mine67")
obj.setPosition(SrVec(-24.2106, 0, 1.30385e-007))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-24.2106)
else:
	attr = obj.createDoubleAttribute("posX", -24.2106, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-24.2106)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",1.30385e-007)
else:
	attr = obj.createDoubleAttribute("posZ", 1.30385e-007, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(1.30385e-007)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine68
obj = scene.getPawn("mine68")
if obj == None:
	obj = scene.createPawn("mine68")
obj.setPosition(SrVec(-22.9247, 0, 0))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-22.9247)
else:
	attr = obj.createDoubleAttribute("posX", -22.9247, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-22.9247)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",0)
else:
	attr = obj.createDoubleAttribute("posZ", 0, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine69
obj = scene.getPawn("mine69")
if obj == None:
	obj = scene.createPawn("mine69")
obj.setPosition(SrVec(-26.9496, 0, 3.01161))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-26.9496)
else:
	attr = obj.createDoubleAttribute("posX", -26.9496, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-26.9496)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",3.01161)
else:
	attr = obj.createDoubleAttribute("posZ", 3.01161, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(3.01161)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine70
obj = scene.getPawn("mine70")
if obj == None:
	obj = scene.createPawn("mine70")
obj.setPosition(SrVec(-31.0117, 0, 3.01032))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-31.0117)
else:
	attr = obj.createDoubleAttribute("posX", -31.0117, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-31.0117)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",3.01032)
else:
	attr = obj.createDoubleAttribute("posZ", 3.01032, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(3.01032)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine71
obj = scene.getPawn("mine71")
if obj == None:
	obj = scene.createPawn("mine71")
obj.setPosition(SrVec(-28.9921, 0, 4.07981))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-28.9921)
else:
	attr = obj.createDoubleAttribute("posX", -28.9921, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-28.9921)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",4.07981)
else:
	attr = obj.createDoubleAttribute("posZ", 4.07981, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(4.07981)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine72
obj = scene.getPawn("mine72")
if obj == None:
	obj = scene.createPawn("mine72")
obj.setPosition(SrVec(-28.9651, 0, -7.28195))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-28.9651)
else:
	attr = obj.createDoubleAttribute("posX", -28.9651, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-28.9651)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-7.28195)
else:
	attr = obj.createDoubleAttribute("posZ", -7.28195, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-7.28195)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine73
obj = scene.getPawn("mine73")
if obj == None:
	obj = scene.createPawn("mine73")
obj.setPosition(SrVec(-25.5346, 0, -2.24523))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-25.5346)
else:
	attr = obj.createDoubleAttribute("posX", -25.5346, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-25.5346)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-2.24523)
else:
	attr = obj.createDoubleAttribute("posZ", -2.24523, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-2.24523)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: obj74
obj = scene.getPawn("obj74")
if obj == None:
	obj = scene.createPawn("obj74")
obj.setPosition(SrVec(-30, 0, 18.9778))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 9.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 9.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 9.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-30)
else:
	attr = obj.createDoubleAttribute("posX", -30, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-30)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",18.9778)
else:
	attr = obj.createDoubleAttribute("posZ", 18.9778, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(18.9778)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj75
obj = scene.getPawn("obj75")
if obj == None:
	obj = scene.createPawn("obj75")
obj.setPosition(SrVec(-23, 0, 20))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-23)
else:
	attr = obj.createDoubleAttribute("posX", -23, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-23)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",20)
else:
	attr = obj.createDoubleAttribute("posZ", 20, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(20)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: mine74
obj = scene.getPawn("mine74")
if obj == None:
	obj = scene.createPawn("mine74")
obj.setPosition(SrVec(-30, 0, 0))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-30)
else:
	attr = obj.createDoubleAttribute("posX", -30, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-30)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",0)
else:
	attr = obj.createDoubleAttribute("posZ", 0, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine75
obj = scene.getPawn("mine75")
if obj == None:
	obj = scene.createPawn("mine75")
obj.setPosition(SrVec(-30.8846, 0, -9.8519))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-30.8846)
else:
	attr = obj.createDoubleAttribute("posX", -30.8846, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-30.8846)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-9.8519)
else:
	attr = obj.createDoubleAttribute("posZ", -9.8519, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-9.8519)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine76
obj = scene.getPawn("mine76")
if obj == None:
	obj = scene.createPawn("mine76")
obj.setPosition(SrVec(-31.9219, 0, -11.0952))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-31.9219)
else:
	attr = obj.createDoubleAttribute("posX", -31.9219, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-31.9219)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-11.0952)
else:
	attr = obj.createDoubleAttribute("posZ", -11.0952, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-11.0952)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine77
obj = scene.getPawn("mine77")
if obj == None:
	obj = scene.createPawn("mine77")
obj.setPosition(SrVec(-33.2567, 0, -13.4876))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-33.2567)
else:
	attr = obj.createDoubleAttribute("posX", -33.2567, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-33.2567)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-13.4876)
else:
	attr = obj.createDoubleAttribute("posZ", -13.4876, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-13.4876)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine78
obj = scene.getPawn("mine78")
if obj == None:
	obj = scene.createPawn("mine78")
obj.setPosition(SrVec(-30, 0, -22.0069))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-30)
else:
	attr = obj.createDoubleAttribute("posX", -30, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-30)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-22.0069)
else:
	attr = obj.createDoubleAttribute("posZ", -22.0069, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-22.0069)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine79
obj = scene.getPawn("mine79")
if obj == None:
	obj = scene.createPawn("mine79")
obj.setPosition(SrVec(-32.1815, 0, -22.0805))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-32.1815)
else:
	attr = obj.createDoubleAttribute("posX", -32.1815, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-32.1815)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-22.0805)
else:
	attr = obj.createDoubleAttribute("posZ", -22.0805, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-22.0805)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine80
obj = scene.getPawn("mine80")
if obj == None:
	obj = scene.createPawn("mine80")
obj.setPosition(SrVec(-26.0473, 0, -15.9279))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-26.0473)
else:
	attr = obj.createDoubleAttribute("posX", -26.0473, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-26.0473)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-15.9279)
else:
	attr = obj.createDoubleAttribute("posZ", -15.9279, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-15.9279)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine81
obj = scene.getPawn("mine81")
if obj == None:
	obj = scene.createPawn("mine81")
obj.setPosition(SrVec(-32.1581, 0, -15.8795))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-32.1581)
else:
	attr = obj.createDoubleAttribute("posX", -32.1581, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-32.1581)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-15.8795)
else:
	attr = obj.createDoubleAttribute("posZ", -15.8795, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-15.8795)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine82
obj = scene.getPawn("mine82")
if obj == None:
	obj = scene.createPawn("mine82")
obj.setPosition(SrVec(-23.1369, 0, -15.9363))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-23.1369)
else:
	attr = obj.createDoubleAttribute("posX", -23.1369, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-23.1369)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-15.9363)
else:
	attr = obj.createDoubleAttribute("posZ", -15.9363, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-15.9363)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine83
obj = scene.getPawn("mine83")
if obj == None:
	obj = scene.createPawn("mine83")
obj.setPosition(SrVec(-24.1672, 0, -14.9697))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-24.1672)
else:
	attr = obj.createDoubleAttribute("posX", -24.1672, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-24.1672)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-14.9697)
else:
	attr = obj.createDoubleAttribute("posZ", -14.9697, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-14.9697)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine84
obj = scene.getPawn("mine84")
if obj == None:
	obj = scene.createPawn("mine84")
obj.setPosition(SrVec(-25.0615, 0, -13.5977))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-25.0615)
else:
	attr = obj.createDoubleAttribute("posX", -25.0615, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-25.0615)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-13.5977)
else:
	attr = obj.createDoubleAttribute("posZ", -13.5977, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-13.5977)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine85
obj = scene.getPawn("mine85")
if obj == None:
	obj = scene.createPawn("mine85")
obj.setPosition(SrVec(-26.3356, 0, -11.1611))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-26.3356)
else:
	attr = obj.createDoubleAttribute("posX", -26.3356, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-26.3356)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-11.1611)
else:
	attr = obj.createDoubleAttribute("posZ", -11.1611, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-11.1611)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine86
obj = scene.getPawn("mine86")
if obj == None:
	obj = scene.createPawn("mine86")
obj.setPosition(SrVec(-27.9522, 0, -21.9257))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-27.9522)
else:
	attr = obj.createDoubleAttribute("posX", -27.9522, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-27.9522)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-21.9257)
else:
	attr = obj.createDoubleAttribute("posZ", -21.9257, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-21.9257)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine87
obj = scene.getPawn("mine87")
if obj == None:
	obj = scene.createPawn("mine87")
obj.setPosition(SrVec(-27.1635, 0, -9.75802))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-27.1635)
else:
	attr = obj.createDoubleAttribute("posX", -27.1635, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-27.1635)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-9.75802)
else:
	attr = obj.createDoubleAttribute("posZ", -9.75802, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-9.75802)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine88
obj = scene.getPawn("mine88")
if obj == None:
	obj = scene.createPawn("mine88")
obj.setPosition(SrVec(-27.9414, 0, -8.42429))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-27.9414)
else:
	attr = obj.createDoubleAttribute("posX", -27.9414, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-27.9414)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-8.42429)
else:
	attr = obj.createDoubleAttribute("posZ", -8.42429, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-8.42429)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine89
obj = scene.getPawn("mine89")
if obj == None:
	obj = scene.createPawn("mine89")
obj.setPosition(SrVec(-35.1994, 0, -15.7398))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-35.1994)
else:
	attr = obj.createDoubleAttribute("posX", -35.1994, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-35.1994)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-15.7398)
else:
	attr = obj.createDoubleAttribute("posZ", -15.7398, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-15.7398)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine90
obj = scene.getPawn("mine90")
if obj == None:
	obj = scene.createPawn("mine90")
obj.setPosition(SrVec(-34.3015, 0, -14.5385))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-34.3015)
else:
	attr = obj.createDoubleAttribute("posX", -34.3015, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-34.3015)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-14.5385)
else:
	attr = obj.createDoubleAttribute("posZ", -14.5385, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-14.5385)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine91
obj = scene.getPawn("mine91")
if obj == None:
	obj = scene.createPawn("mine91")
obj.setPosition(SrVec(-28.9394, 0, -17.9939))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-28.9394)
else:
	attr = obj.createDoubleAttribute("posX", -28.9394, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-28.9394)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-17.9939)
else:
	attr = obj.createDoubleAttribute("posZ", -17.9939, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-17.9939)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine92
obj = scene.getPawn("mine92")
if obj == None:
	obj = scene.createPawn("mine92")
obj.setPosition(SrVec(-25.8748, 0, -21.8197))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-25.8748)
else:
	attr = obj.createDoubleAttribute("posX", -25.8748, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-25.8748)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-21.8197)
else:
	attr = obj.createDoubleAttribute("posZ", -21.8197, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-21.8197)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine93
obj = scene.getPawn("mine93")
if obj == None:
	obj = scene.createPawn("mine93")
obj.setPosition(SrVec(-28.844, 0, -25))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-28.844)
else:
	attr = obj.createDoubleAttribute("posX", -28.844, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-28.844)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-25)
else:
	attr = obj.createDoubleAttribute("posZ", -25, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-25)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine94
obj = scene.getPawn("mine94")
if obj == None:
	obj = scene.createPawn("mine94")
obj.setPosition(SrVec(-33.0797, 0, -19.1652))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-33.0797)
else:
	attr = obj.createDoubleAttribute("posX", -33.0797, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-33.0797)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-19.1652)
else:
	attr = obj.createDoubleAttribute("posZ", -19.1652, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-19.1652)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine95
obj = scene.getPawn("mine95")
if obj == None:
	obj = scene.createPawn("mine95")
obj.setPosition(SrVec(-28.6345, 0, -30))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-28.6345)
else:
	attr = obj.createDoubleAttribute("posX", -28.6345, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-28.6345)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-30)
else:
	attr = obj.createDoubleAttribute("posZ", -30, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-30)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine96
obj = scene.getPawn("mine96")
if obj == None:
	obj = scene.createPawn("mine96")
obj.setPosition(SrVec(-29.7978, 0, -30))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-29.7978)
else:
	attr = obj.createDoubleAttribute("posX", -29.7978, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-29.7978)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-30)
else:
	attr = obj.createDoubleAttribute("posZ", -30, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-30)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine97
obj = scene.getPawn("mine97")
if obj == None:
	obj = scene.createPawn("mine97")
obj.setPosition(SrVec(-31.103, 0, -30))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-31.103)
else:
	attr = obj.createDoubleAttribute("posX", -31.103, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-31.103)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-30)
else:
	attr = obj.createDoubleAttribute("posZ", -30, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-30)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine98
obj = scene.getPawn("mine98")
if obj == None:
	obj = scene.createPawn("mine98")
obj.setPosition(SrVec(-34.5933, 0, -30.1467))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-34.5933)
else:
	attr = obj.createDoubleAttribute("posX", -34.5933, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-34.5933)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-30.1467)
else:
	attr = obj.createDoubleAttribute("posZ", -30.1467, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-30.1467)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine99
obj = scene.getPawn("mine99")
if obj == None:
	obj = scene.createPawn("mine99")
obj.setPosition(SrVec(-32.989, 0, -28.6792))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-32.989)
else:
	attr = obj.createDoubleAttribute("posX", -32.989, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-32.989)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-28.6792)
else:
	attr = obj.createDoubleAttribute("posZ", -28.6792, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-28.6792)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine100
obj = scene.getPawn("mine100")
if obj == None:
	obj = scene.createPawn("mine100")
obj.setPosition(SrVec(-24.8814, 0, -28.6764))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-24.8814)
else:
	attr = obj.createDoubleAttribute("posX", -24.8814, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-24.8814)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-28.6764)
else:
	attr = obj.createDoubleAttribute("posZ", -28.6764, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-28.6764)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine101
obj = scene.getPawn("mine101")
if obj == None:
	obj = scene.createPawn("mine101")
obj.setPosition(SrVec(-28.9204, 0, -27.7933))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-28.9204)
else:
	attr = obj.createDoubleAttribute("posX", -28.9204, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-28.9204)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-27.7933)
else:
	attr = obj.createDoubleAttribute("posZ", -27.7933, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-27.7933)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine102
obj = scene.getPawn("mine102")
if obj == None:
	obj = scene.createPawn("mine102")
obj.setPosition(SrVec(-31.2362, 0, -26.3237))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-31.2362)
else:
	attr = obj.createDoubleAttribute("posX", -31.2362, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-31.2362)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-26.3237)
else:
	attr = obj.createDoubleAttribute("posZ", -26.3237, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-26.3237)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine103
obj = scene.getPawn("mine103")
if obj == None:
	obj = scene.createPawn("mine103")
obj.setPosition(SrVec(-26.597, 0, -26.3264))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-26.597)
else:
	attr = obj.createDoubleAttribute("posX", -26.597, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-26.597)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-26.3264)
else:
	attr = obj.createDoubleAttribute("posZ", -26.3264, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-26.3264)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine104
obj = scene.getPawn("mine104")
if obj == None:
	obj = scene.createPawn("mine104")
obj.setPosition(SrVec(-22.9702, 0, -26.7598))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-22.9702)
else:
	attr = obj.createDoubleAttribute("posX", -22.9702, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-22.9702)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-26.7598)
else:
	attr = obj.createDoubleAttribute("posZ", -26.7598, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-26.7598)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine105
obj = scene.getPawn("mine105")
if obj == None:
	obj = scene.createPawn("mine105")
obj.setPosition(SrVec(-35.0113, 0, -26.9047))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-35.0113)
else:
	attr = obj.createDoubleAttribute("posX", -35.0113, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-35.0113)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-26.9047)
else:
	attr = obj.createDoubleAttribute("posZ", -26.9047, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-26.9047)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine106
obj = scene.getPawn("mine106")
if obj == None:
	obj = scene.createPawn("mine106")
obj.setPosition(SrVec(-29.0695, 0, -15.1127))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-29.0695)
else:
	attr = obj.createDoubleAttribute("posX", -29.0695, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-29.0695)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-15.1127)
else:
	attr = obj.createDoubleAttribute("posZ", -15.1127, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-15.1127)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine107
obj = scene.getPawn("mine107")
if obj == None:
	obj = scene.createPawn("mine107")
obj.setPosition(SrVec(-23.2534, 0, -20.9089))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-23.2534)
else:
	attr = obj.createDoubleAttribute("posX", -23.2534, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-23.2534)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-20.9089)
else:
	attr = obj.createDoubleAttribute("posZ", -20.9089, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-20.9089)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine108
obj = scene.getPawn("mine108")
if obj == None:
	obj = scene.createPawn("mine108")
obj.setPosition(SrVec(-35.2896, 0, -21.0456))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-35.2896)
else:
	attr = obj.createDoubleAttribute("posX", -35.2896, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-35.2896)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-21.0456)
else:
	attr = obj.createDoubleAttribute("posZ", -21.0456, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-21.0456)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine109
obj = scene.getPawn("mine109")
if obj == None:
	obj = scene.createPawn("mine109")
obj.setPosition(SrVec(-33.2506, 0, -24.4231))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-33.2506)
else:
	attr = obj.createDoubleAttribute("posX", -33.2506, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-33.2506)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-24.4231)
else:
	attr = obj.createDoubleAttribute("posZ", -24.4231, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-24.4231)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine110
obj = scene.getPawn("mine110")
if obj == None:
	obj = scene.createPawn("mine110")
obj.setPosition(SrVec(-25, 0, -24.4223))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-25)
else:
	attr = obj.createDoubleAttribute("posX", -25, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-25)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-24.4223)
else:
	attr = obj.createDoubleAttribute("posZ", -24.4223, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-24.4223)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine111
obj = scene.getPawn("mine111")
if obj == None:
	obj = scene.createPawn("mine111")
obj.setPosition(SrVec(-25, 0, -19.0253))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-25)
else:
	attr = obj.createDoubleAttribute("posX", -25, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-25)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-19.0253)
else:
	attr = obj.createDoubleAttribute("posZ", -19.0253, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-19.0253)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine112
obj = scene.getPawn("mine112")
if obj == None:
	obj = scene.createPawn("mine112")
obj.setPosition(SrVec(-30.6764, 0, -33.1081))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-30.6764)
else:
	attr = obj.createDoubleAttribute("posX", -30.6764, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-30.6764)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-33.1081)
else:
	attr = obj.createDoubleAttribute("posZ", -33.1081, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-33.1081)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine113
obj = scene.getPawn("mine113")
if obj == None:
	obj = scene.createPawn("mine113")
obj.setPosition(SrVec(-27.7634, 0, -33.1059))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-27.7634)
else:
	attr = obj.createDoubleAttribute("posX", -27.7634, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-27.7634)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-33.1059)
else:
	attr = obj.createDoubleAttribute("posZ", -33.1059, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-33.1059)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine114
obj = scene.getPawn("mine114")
if obj == None:
	obj = scene.createPawn("mine114")
obj.setPosition(SrVec(-24.9926, 0, -32.0648))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-24.9926)
else:
	attr = obj.createDoubleAttribute("posX", -24.9926, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-24.9926)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-32.0648)
else:
	attr = obj.createDoubleAttribute("posZ", -32.0648, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-32.0648)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine115
obj = scene.getPawn("mine115")
if obj == None:
	obj = scene.createPawn("mine115")
obj.setPosition(SrVec(-34.9057, 0, -33.8572))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-34.9057)
else:
	attr = obj.createDoubleAttribute("posX", -34.9057, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-34.9057)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-33.8572)
else:
	attr = obj.createDoubleAttribute("posZ", -33.8572, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-33.8572)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine116
obj = scene.getPawn("mine116")
if obj == None:
	obj = scene.createPawn("mine116")
obj.setPosition(SrVec(-32.8521, 0, -31.9177))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-32.8521)
else:
	attr = obj.createDoubleAttribute("posX", -32.8521, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-32.8521)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-31.9177)
else:
	attr = obj.createDoubleAttribute("posZ", -31.9177, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-31.9177)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine117
obj = scene.getPawn("mine117")
if obj == None:
	obj = scene.createPawn("mine117")
obj.setPosition(SrVec(-29.0917, 0, -35.3218))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-29.0917)
else:
	attr = obj.createDoubleAttribute("posX", -29.0917, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-29.0917)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-35.3218)
else:
	attr = obj.createDoubleAttribute("posZ", -35.3218, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-35.3218)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine118
obj = scene.getPawn("mine118")
if obj == None:
	obj = scene.createPawn("mine118")
obj.setPosition(SrVec(-23.3988, 0, -33.9847))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-23.3988)
else:
	attr = obj.createDoubleAttribute("posX", -23.3988, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-23.3988)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-33.9847)
else:
	attr = obj.createDoubleAttribute("posZ", -33.9847, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-33.9847)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine119
obj = scene.getPawn("mine119")
if obj == None:
	obj = scene.createPawn("mine119")
obj.setPosition(SrVec(-23.546, 4.81089e-005, -30))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-23.546)
else:
	attr = obj.createDoubleAttribute("posX", -23.546, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-23.546)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",4.81089e-005)
else:
	attr = obj.createDoubleAttribute("posY", 4.81089e-005, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(4.81089e-005)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-30)
else:
	attr = obj.createDoubleAttribute("posZ", -30, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-30)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine120
obj = scene.getPawn("mine120")
if obj == None:
	obj = scene.createPawn("mine120")
obj.setPosition(SrVec(-27.4694, 0, -30.0027))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-27.4694)
else:
	attr = obj.createDoubleAttribute("posX", -27.4694, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-27.4694)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-30.0027)
else:
	attr = obj.createDoubleAttribute("posZ", -30.0027, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-30.0027)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine121
obj = scene.getPawn("mine121")
if obj == None:
	obj = scene.createPawn("mine121")
obj.setPosition(SrVec(-25.8738, 0, -34.7095))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-25.8738)
else:
	attr = obj.createDoubleAttribute("posX", -25.8738, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-25.8738)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-34.7095)
else:
	attr = obj.createDoubleAttribute("posZ", -34.7095, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-34.7095)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine122
obj = scene.getPawn("mine122")
if obj == None:
	obj = scene.createPawn("mine122")
obj.setPosition(SrVec(-32.5734, 0, -34.7299))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-32.5734)
else:
	attr = obj.createDoubleAttribute("posX", -32.5734, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-32.5734)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-34.7299)
else:
	attr = obj.createDoubleAttribute("posZ", -34.7299, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-34.7299)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: obj76
obj = scene.getPawn("obj76")
if obj == None:
	obj = scene.createPawn("obj76")
obj.setPosition(SrVec(-21.2, 0, 39.9))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",20, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  20, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(20, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-21.2)
else:
	attr = obj.createDoubleAttribute("posX", -21.2, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-21.2)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",39.9)
else:
	attr = obj.createDoubleAttribute("posZ", 39.9, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(39.9)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj77
obj = scene.getPawn("obj77")
if obj == None:
	obj = scene.createPawn("obj77")
obj.setPosition(SrVec(21.2, 0, 39.9))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",20, 1.5, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  20, 1.5, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(20, 1.5, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",21.2)
else:
	attr = obj.createDoubleAttribute("posX", 21.2, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(21.2)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",39.9)
else:
	attr = obj.createDoubleAttribute("posZ", 39.9, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(39.9)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: Finish
obj = scene.getPawn("Finish")
if obj == None:
	obj = scene.createPawn("Finish")
obj.setPosition(SrVec(37.8313, 0, -36.805))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1, 3)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1, 3, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1, 3)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",37.8313)
else:
	attr = obj.createDoubleAttribute("posX", 37.8313, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(37.8313)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-36.805)
else:
	attr = obj.createDoubleAttribute("posZ", -36.805, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-36.805)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: Wall
obj = scene.getPawn("Wall")
if obj == None:
	obj = scene.createPawn("Wall")
obj.setPosition(SrVec(0, 0, 41))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",70, 6, 0.1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  70, 6, 0.1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(70, 6, 0.1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",0, 0.3, 1)
else:
	attr = obj.createVec3Attribute("color",  0, 0.3, 1, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0.3, 1)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0)
else:
	attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",41)
else:
	attr = obj.createDoubleAttribute("posZ", 41, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(41)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj178
obj = scene.getPawn("obj178")
if obj == None:
	obj = scene.createPawn("obj178")
obj.setPosition(SrVec(-20, 0, -36))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 2)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 2, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 2)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-20)
else:
	attr = obj.createDoubleAttribute("posX", -20, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-20)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-36)
else:
	attr = obj.createDoubleAttribute("posZ", -36, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-36)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj79
obj = scene.getPawn("obj79")
if obj == None:
	obj = scene.createPawn("obj79")
obj.setPosition(SrVec(-16, 0, -39))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-16)
else:
	attr = obj.createDoubleAttribute("posX", -16, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-16)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-39)
else:
	attr = obj.createDoubleAttribute("posZ", -39, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-39)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj80
obj = scene.getPawn("obj80")
if obj == None:
	obj = scene.createPawn("obj80")
obj.setPosition(SrVec(-14, 0, -37))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-14)
else:
	attr = obj.createDoubleAttribute("posX", -14, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-14)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-37)
else:
	attr = obj.createDoubleAttribute("posZ", -37, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-37)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj81
obj = scene.getPawn("obj81")
if obj == None:
	obj = scene.createPawn("obj81")
obj.setPosition(SrVec(-10, 0, -37))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-10)
else:
	attr = obj.createDoubleAttribute("posX", -10, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-10)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-37)
else:
	attr = obj.createDoubleAttribute("posZ", -37, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-37)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj82
obj = scene.getPawn("obj82")
if obj == None:
	obj = scene.createPawn("obj82")
obj.setPosition(SrVec(-6, 0, -35))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-6)
else:
	attr = obj.createDoubleAttribute("posX", -6, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-6)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-35)
else:
	attr = obj.createDoubleAttribute("posZ", -35, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-35)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj83
obj = scene.getPawn("obj83")
if obj == None:
	obj = scene.createPawn("obj83")
obj.setPosition(SrVec(-5.93304, 0, -38.9548))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-5.93304)
else:
	attr = obj.createDoubleAttribute("posX", -5.93304, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-5.93304)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-38.9548)
else:
	attr = obj.createDoubleAttribute("posZ", -38.9548, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-38.9548)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj84
obj = scene.getPawn("obj84")
if obj == None:
	obj = scene.createPawn("obj84")
obj.setPosition(SrVec(0, 0, -37))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0)
else:
	attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-37)
else:
	attr = obj.createDoubleAttribute("posZ", -37, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-37)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj85
obj = scene.getPawn("obj85")
if obj == None:
	obj = scene.createPawn("obj85")
obj.setPosition(SrVec(3, 0, -37))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",3)
else:
	attr = obj.createDoubleAttribute("posX", 3, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(3)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-37)
else:
	attr = obj.createDoubleAttribute("posZ", -37, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-37)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj86
obj = scene.getPawn("obj86")
if obj == None:
	obj = scene.createPawn("obj86")
obj.setPosition(SrVec(6, 0, -37))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",6)
else:
	attr = obj.createDoubleAttribute("posX", 6, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(6)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-37)
else:
	attr = obj.createDoubleAttribute("posZ", -37, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-37)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj87
obj = scene.getPawn("obj87")
if obj == None:
	obj = scene.createPawn("obj87")
obj.setPosition(SrVec(10, 0, -39))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",10)
else:
	attr = obj.createDoubleAttribute("posX", 10, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(10)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-39)
else:
	attr = obj.createDoubleAttribute("posZ", -39, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-39)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj88
obj = scene.getPawn("obj88")
if obj == None:
	obj = scene.createPawn("obj88")
obj.setPosition(SrVec(10, 0, -35))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",10)
else:
	attr = obj.createDoubleAttribute("posX", 10, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(10)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-35)
else:
	attr = obj.createDoubleAttribute("posZ", -35, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-35)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: obj89
obj = scene.getPawn("obj89")
if obj == None:
	obj = scene.createPawn("obj89")
obj.setPosition(SrVec(18, 0, -37))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","box")
else:
	attr = obj.createStringAttribute("collisionShape",  "box", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("box")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.1, 1.5, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.1, 1.5, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.1, 1.5, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","")
else:
	attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",18)
else:
	attr = obj.createDoubleAttribute("posX", 18, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(18)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-37)
else:
	attr = obj.createDoubleAttribute("posZ", -37, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-37)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",True)
else:
	attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)

# ---- pawn: mine123
obj = scene.getPawn("mine123")
if obj == None:
	obj = scene.createPawn("mine123")
obj.setPosition(SrVec(-16.8035, 0, -35.9382))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-16.8035)
else:
	attr = obj.createDoubleAttribute("posX", -16.8035, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-16.8035)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-35.9382)
else:
	attr = obj.createDoubleAttribute("posZ", -35.9382, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-35.9382)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine124
obj = scene.getPawn("mine124")
if obj == None:
	obj = scene.createPawn("mine124")
obj.setPosition(SrVec(-11.8479, 0, -38.7964))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-11.8479)
else:
	attr = obj.createDoubleAttribute("posX", -11.8479, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-11.8479)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-38.7964)
else:
	attr = obj.createDoubleAttribute("posZ", -38.7964, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-38.7964)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine125
obj = scene.getPawn("mine125")
if obj == None:
	obj = scene.createPawn("mine125")
obj.setPosition(SrVec(-7.35995, 0, -36.8855))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-7.35995)
else:
	attr = obj.createDoubleAttribute("posX", -7.35995, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-7.35995)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-36.8855)
else:
	attr = obj.createDoubleAttribute("posZ", -36.8855, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-36.8855)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine126
obj = scene.getPawn("mine126")
if obj == None:
	obj = scene.createPawn("mine126")
obj.setPosition(SrVec(-2.97839, 0, -37.8366))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-2.97839)
else:
	attr = obj.createDoubleAttribute("posX", -2.97839, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-2.97839)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-37.8366)
else:
	attr = obj.createDoubleAttribute("posZ", -37.8366, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-37.8366)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine127
obj = scene.getPawn("mine127")
if obj == None:
	obj = scene.createPawn("mine127")
obj.setPosition(SrVec(6.01644, 0, -34.8659))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",6.01644)
else:
	attr = obj.createDoubleAttribute("posX", 6.01644, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(6.01644)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-34.8659)
else:
	attr = obj.createDoubleAttribute("posZ", -34.8659, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-34.8659)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine128
obj = scene.getPawn("mine128")
if obj == None:
	obj = scene.createPawn("mine128")
obj.setPosition(SrVec(-4.85829, 0, -34.9846))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-4.85829)
else:
	attr = obj.createDoubleAttribute("posX", -4.85829, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-4.85829)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-34.9846)
else:
	attr = obj.createDoubleAttribute("posZ", -34.9846, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-34.9846)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine129
obj = scene.getPawn("mine129")
if obj == None:
	obj = scene.createPawn("mine129")
obj.setPosition(SrVec(-4.89433, 0, -38.9133))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-4.89433)
else:
	attr = obj.createDoubleAttribute("posX", -4.89433, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-4.89433)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-38.9133)
else:
	attr = obj.createDoubleAttribute("posZ", -38.9133, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-38.9133)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine130
obj = scene.getPawn("mine130")
if obj == None:
	obj = scene.createPawn("mine130")
obj.setPosition(SrVec(-2.97144, 0, -35.8103))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-2.97144)
else:
	attr = obj.createDoubleAttribute("posX", -2.97144, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-2.97144)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-35.8103)
else:
	attr = obj.createDoubleAttribute("posZ", -35.8103, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-35.8103)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine131
obj = scene.getPawn("mine131")
if obj == None:
	obj = scene.createPawn("mine131")
obj.setPosition(SrVec(2.65023, 0, -39.0291))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",2.65023)
else:
	attr = obj.createDoubleAttribute("posX", 2.65023, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(2.65023)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-39.0291)
else:
	attr = obj.createDoubleAttribute("posZ", -39.0291, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-39.0291)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine132
obj = scene.getPawn("mine132")
if obj == None:
	obj = scene.createPawn("mine132")
obj.setPosition(SrVec(11.782, 0, -36.8831))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",11.782)
else:
	attr = obj.createDoubleAttribute("posX", 11.782, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(11.782)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-36.8831)
else:
	attr = obj.createDoubleAttribute("posZ", -36.8831, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-36.8831)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine133
obj = scene.getPawn("mine133")
if obj == None:
	obj = scene.createPawn("mine133")
obj.setPosition(SrVec(12.7256, 0, -39.1493))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",12.7256)
else:
	attr = obj.createDoubleAttribute("posX", 12.7256, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(12.7256)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-39.1493)
else:
	attr = obj.createDoubleAttribute("posZ", -39.1493, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-39.1493)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine134
obj = scene.getPawn("mine134")
if obj == None:
	obj = scene.createPawn("mine134")
obj.setPosition(SrVec(12.781, 0, -34.7312))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",12.781)
else:
	attr = obj.createDoubleAttribute("posX", 12.781, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(12.781)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-34.7312)
else:
	attr = obj.createDoubleAttribute("posZ", -34.7312, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-34.7312)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine135
obj = scene.getPawn("mine135")
if obj == None:
	obj = scene.createPawn("mine135")
obj.setPosition(SrVec(15.9776, 0, -38.9058))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",15.9776)
else:
	attr = obj.createDoubleAttribute("posX", 15.9776, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(15.9776)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-38.9058)
else:
	attr = obj.createDoubleAttribute("posZ", -38.9058, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-38.9058)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine136
obj = scene.getPawn("mine136")
if obj == None:
	obj = scene.createPawn("mine136")
obj.setPosition(SrVec(15.9741, 0, -34.8687))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",15.9741)
else:
	attr = obj.createDoubleAttribute("posX", 15.9741, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(15.9741)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-34.8687)
else:
	attr = obj.createDoubleAttribute("posZ", -34.8687, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-34.8687)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine137
obj = scene.getPawn("mine137")
if obj == None:
	obj = scene.createPawn("mine137")
obj.setPosition(SrVec(14.4563, 0, -36.9814))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",14.4563)
else:
	attr = obj.createDoubleAttribute("posX", 14.4563, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(14.4563)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-36.9814)
else:
	attr = obj.createDoubleAttribute("posZ", -36.9814, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-36.9814)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine138
obj = scene.getPawn("mine138")
if obj == None:
	obj = scene.createPawn("mine138")
obj.setPosition(SrVec(20.4723, 0, -35.0965))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",20.4723)
else:
	attr = obj.createDoubleAttribute("posX", 20.4723, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(20.4723)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-35.0965)
else:
	attr = obj.createDoubleAttribute("posZ", -35.0965, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-35.0965)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine139
obj = scene.getPawn("mine139")
if obj == None:
	obj = scene.createPawn("mine139")
obj.setPosition(SrVec(20.4753, 0, -39.0326))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",20.4753)
else:
	attr = obj.createDoubleAttribute("posX", 20.4753, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(20.4753)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-39.0326)
else:
	attr = obj.createDoubleAttribute("posZ", -39.0326, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-39.0326)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine140
obj = scene.getPawn("mine140")
if obj == None:
	obj = scene.createPawn("mine140")
obj.setPosition(SrVec(26.0636, 0, -36.8939))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",26.0636)
else:
	attr = obj.createDoubleAttribute("posX", 26.0636, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(26.0636)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-36.8939)
else:
	attr = obj.createDoubleAttribute("posZ", -36.8939, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-36.8939)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine141
obj = scene.getPawn("mine141")
if obj == None:
	obj = scene.createPawn("mine141")
obj.setPosition(SrVec(-0.695889, 0, -35.4217))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",-0.695889)
else:
	attr = obj.createDoubleAttribute("posX", -0.695889, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(-0.695889)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-35.4217)
else:
	attr = obj.createDoubleAttribute("posZ", -35.4217, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-35.4217)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: mine142
obj = scene.getPawn("mine142")
if obj == None:
	obj = scene.createPawn("mine142")
obj.setPosition(SrVec(0.259006, 0, -34.5983))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","sphere")
else:
	attr = obj.createStringAttribute("collisionShape",  "sphere", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("sphere")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",0.5, 0, 0)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  0.5, 0, 0, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0.5, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","mine.dae")
else:
	attr = obj.createStringAttribute("mesh",  "mine.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("mine.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0.259006)
else:
	attr = obj.createDoubleAttribute("posX", 0.259006, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0.259006)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0)
else:
	attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-34.5983)
else:
	attr = obj.createDoubleAttribute("posZ", -34.5983, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-34.5983)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: ground
obj = scene.getPawn("ground")
if obj == None:
	obj = scene.createPawn("ground")
obj.setPosition(SrVec(0, 0.01, 0))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","null")
else:
	attr = obj.createStringAttribute("collisionShape",  "null", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","ground.dae")
else:
	attr = obj.createStringAttribute("mesh",  "ground.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("ground.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0)
else:
	attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0.01)
else:
	attr = obj.createDoubleAttribute("posY", 0.01, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0.01)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",0)
else:
	attr = obj.createDoubleAttribute("posZ", 0, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: tile
obj = scene.getPawn("tile")
if obj == None:
	obj = scene.createPawn("tile")
obj.setPosition(SrVec(0.4, 0.01, 0))
obj.setOrientation(SrQuat(1, 0, 0, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","null")
else:
	attr = obj.createStringAttribute("collisionShape",  "null", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","tile.dae")
else:
	attr = obj.createStringAttribute("mesh",  "tile.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("tile.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",0.4)
else:
	attr = obj.createDoubleAttribute("posX", 0.4, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(0.4)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0.01)
else:
	attr = obj.createDoubleAttribute("posY", 0.01, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0.01)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",0)
else:
	attr = obj.createDoubleAttribute("posZ", 0, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",0)
else:
	attr = obj.createDoubleAttribute("rotY", 0, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)

# ---- pawn: finishLine
obj = scene.getPawn("finishLine")
if obj == None:
	obj = scene.createPawn("finishLine")
obj.setPosition(SrVec(38.38, 0.01, -36.88))
obj.setOrientation(SrQuat(0.707107, 0, 0.707107, 0))
if obj.getAttribute("blendTexturesWithLighting") != None :
	obj.setBoolAttribute("blendTexturesWithLighting",True)
else:
	attr = obj.createBoolAttribute("blendTexturesWithLighting", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("collisionShape") != None :
	obj.setStringAttribute("collisionShape","null")
else:
	attr = obj.createStringAttribute("collisionShape",  "null", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
	attr.setDefaultValue("null")
	attr.setValue("null")
	validValues = StringVec()
	validValues.append("null")
	validValues.append("sphere")
	validValues.append("box")
	validValues.append("capsule")
	attr.setValidValues(validValues)
if obj.getAttribute("collisionShapeScale") != None :
	obj.setVec3Attribute("collisionShapeScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("collisionShapeScale",  1, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("color") != None :
	obj.setVec3Attribute("color",1, 0, 0)
else:
	attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("createPhysics") == None :
	attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
if obj.getAttribute("enablePhysics") != None :
	obj.setBoolAttribute("enablePhysics",False)
else:
	attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
	attr.setDefaultValue(False)
	attr.setValue(False)
if obj.getAttribute("mesh") != None :
	obj.setStringAttribute("mesh","checkerboard.dae")
else:
	attr = obj.createStringAttribute("mesh",  "checkerboard.dae", True, "Display", 400, False, False, False, "Geometry/mesh")
	attr.setDefaultValue("")
	attr.setValue("checkerboard.dae")
	validValues = StringVec()
	attr.setValidValues(validValues)
if obj.getAttribute("meshPivot") != None :
	obj.setVec3Attribute("meshPivot",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshPivot",  0, 0, 0, True, "Display", 440, False, False, False, "Mesh pivot offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshRotation") != None :
	obj.setVec3Attribute("meshRotation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("meshScale") != None :
	obj.setVec3Attribute("meshScale",1, 1, 1)
else:
	attr = obj.createVec3Attribute("meshScale",  1, 1, 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
	vec = SrVec()
	vec.setData(0, 1)
	vec.setData(1, 1)
	vec.setData(2, 1)
	attr.setDefaultValue(vec)
	vec1 = SrVec(1, 1, 1)
	attr.setValue(vec1)
if obj.getAttribute("meshTranslation") != None :
	obj.setVec3Attribute("meshTranslation",0, 0, 0)
else:
	attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
	vec = SrVec()
	vec.setData(0, 0)
	vec.setData(1, 0)
	vec.setData(2, 0)
	attr.setDefaultValue(vec)
	vec1 = SrVec(0, 0, 0)
	attr.setValue(vec1)
if obj.getAttribute("posX") != None :
	obj.setDoubleAttribute("posX",38.38)
else:
	attr = obj.createDoubleAttribute("posX", 38.38, True, "transform", 10, False, False, False, "X position")
	attr.setDefaultValue(0)
	attr.setValue(38.38)
if obj.getAttribute("posY") != None :
	obj.setDoubleAttribute("posY",0.01)
else:
	attr = obj.createDoubleAttribute("posY", 0.01, True, "transform", 20, False, False, False, "Y position")
	attr.setDefaultValue(0)
	attr.setValue(0.01)
if obj.getAttribute("posZ") != None :
	obj.setDoubleAttribute("posZ",-36.88)
else:
	attr = obj.createDoubleAttribute("posZ", -36.88, True, "transform", 30, False, False, False, "Z position")
	attr.setDefaultValue(0)
	attr.setValue(-36.88)
if obj.getAttribute("rotX") != None :
	obj.setDoubleAttribute("rotX",-0)
else:
	attr = obj.createDoubleAttribute("rotX", -0, True, "transform", 40, False, False, False, "X rotation")
	attr.setDefaultValue(0)
	attr.setValue(-0)
if obj.getAttribute("rotY") != None :
	obj.setDoubleAttribute("rotY",90)
else:
	attr = obj.createDoubleAttribute("rotY", 90, True, "transform", 50, False, False, False, "Y rotation")
	attr.setDefaultValue(0)
	attr.setValue(90)
if obj.getAttribute("rotZ") != None :
	obj.setDoubleAttribute("rotZ",0)
else:
	attr = obj.createDoubleAttribute("rotZ", 0, True, "transform", 60, False, False, False, "Z rotation")
	attr.setDefaultValue(0)
	attr.setValue(0)
if obj.getAttribute("showCollisionShape") != None :
	obj.setBoolAttribute("showCollisionShape",True)
else:
	attr = obj.createBoolAttribute("showCollisionShape", True, True, "Physics", 370, False, False, False, "Whether the collision shape is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("showStaticMesh") != None :
	obj.setBoolAttribute("showStaticMesh",True)
else:
	attr = obj.createBoolAttribute("showStaticMesh", True, True, "Display", 405, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(True)
if obj.getAttribute("visible") != None :
	obj.setBoolAttribute("visible",False)
else:
	attr = obj.createBoolAttribute("visible", False, True, "Display", 5, False, False, False, "Whether the object is visible.")
	attr.setDefaultValue(True)
	attr.setValue(False)
